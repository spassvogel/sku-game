{"version":3,"sources":["components/pixi/RectTileLayer.tsx","reducers/wmsReducer.ts","components/Tilemap.tsx","reducers/gameStateReducer.ts","reducers/pickingListsReducer.ts","reducers/warehouseReducer.ts","appState.ts","reducers/statusTextReducer.ts","reducers/mutedReducer.ts","components/context/AppProvider.tsx","components/pixi/Box.tsx","components/pixi/Guy.tsx","components/pixi/SpriteAnimated.tsx","components/pixi/WarehouseGuy.tsx","constants/gameSettings.ts","components/Scene.tsx","components/ui/IPad/content/SKUProfile.tsx","components/ui/IPad/content/PickingLists.tsx","components/ui/IPad/index.tsx","components/ui/StartButton.tsx","components/ui/StatusText.tsx","components/ui/Settings/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["window","PIXI","Categories","RectTileLayer","PixiComponent","create","props","require","tilemap","CompositeRectTileLayer","texture","applyProps","instance","oldProps","layer","tileset","horizontalTiles","spritesheet","data","i","length","w","tilewidth","h","tileheight","x","y","Math","floor","spriteId","name","addFrame","textures","Tilemap","basePath","setRackLocations","setDockLocations","setWallLocations","useState","layers","setLayers","debug","useEffect","spritesheetData","parseSpritesheetData","getTileset","from","image","baseTexture","wallLocations","parse","rackTileIds","tiles","filter","tile","properties","some","p","value","map","t","id","dockTileIds","visible","addAllTilesInLayerToList","width","createTileLayer","placeholderLayer","find","rackLocations","dockLocations","forEach","index","rtId","firstgid","push","mapData","tilesets","Error","console","warn","source","key","columns","frames","tilecount","frame","spriteSourceSize","rotated","trimmed","sourceSize","meta","size","imagewidth","imageheight","scale","list","reduce","acc","GameState","initialWMSState","category","A","productCode","description","slotting","B","C","D","pickingListsReducer","state","action","type","pL","orderNo","guy","pickedProducts","complete","initialWarehouseState","boxes","products","sort","random","location","generateBoxLocationsAtDock","warehouseReducer","inRack","gameStateReducer","pickingBoxes","initialState","statusText","gameState","placingBoxes","wms","pickingLists","toString","slice","warehouse","muted","localStorage","getItem","statusTextReducer","text","mutedReducer","setItem","AppContext","createContext","dispatch","reducer","AppProvider","children","useReducer","Provider","PixiPlugin","registerPIXI","gsap","registerPlugin","Orientation","Box","tileWidth","tileHeight","behindWall","selected","ref","useRef","imgRef","dragRef","offset","useMemo","onDragStart","event","current","currentTarget","zIndex","stopPropagation","onClick","getLocalPosition","onDragEnd","undefined","onReleased","onDragMove","parentPos","parent","position","onDragged","img","process","mousedown","touchstart","mouseup","mouseupoutside","mousemove","touchmove","draw","graphics","clear","lineStyle","drawRect","endFill","anchor","alpha","newProps","applyDefaultProps","gotoAndPlay","Guy","forwardRef","atlas","carryBox","containerProps","setFrames","right","orientation","setOrientation","app","useApp","lastPositionPoint","useTick","currentPosition","lastPosition","equals","angle","atan2","PI","front","left","back","clone","loader","onComplete","once","allFrames","resources","indexedTextures","Object","keys","animation","substring","loading","add","load","animationFrames","SpriteAnimated","animationSpeed","isPlaying","convertLocation","WarehouseGuy","pickingList","aStar","homeLocation","tileSize","getProductLocation","guyProps","guyRef","setCarryBox","lastLocation","currentDestination","includes","destination","killTweensOf","tl","timeline","pathStartLocation","path","findPath","loc","to","ease","Linear","easeNone","pixi","duration","endLocation","Scene","height","restProps","useContext","setMapData","selectedBox","setSelectedBox","jsonPath","substr","lastIndexOf","sound","stop","play","getRackAtLocation","useCallback","l","getDockAtLocation","pointToSceneLocation","point","getBoxNameAtLocation","entry","entries","box","locationIsBlocked","matrix","row","blocked","AStarFinder","grid","diagonalAllowed","includeStartNode","heuristic","weight","pickingList1","setPickingList1","pickingList2","setPickingList2","pickingList3","setPickingList3","nextPickingList1","nextPickingList2","nextPickingList3","interactive","hitArea","sortableChildren","onProductClick","global","rackLocation","tint","otherBoxName","setTint","handleDragged","dockLocation","rackOrDockLoc","originX","originY","handleBoxDragEnd","isNorthOfWall","obj","ghost","c","wL","SKUProfile","tableRef","table","querySelector","selectedProduct","classList","scrollIntoView","block","remove","renderRow","data-code","colSpan","className","PickingLists","productNameMap","renderPickingList","pList","renderProduct","completed","IPad","renderContent","StartButton","handleClick","values","b","reload","StatusText","time","setTime","timeout","start","performance","now","setInterval","clearTimeout","formatTime","ms","seconds","hours","minutes","padLeft","toFixed","padStart","input","Settings","onChange","e","target","checked","App","setSelectedProduct","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d5083337.chunk.js","sourcesContent":["import { PixiComponent } from \"@inlet/react-pixi\";\nimport * as PIXI  from 'pixi.js';\nimport { TiledLayerData, TiledTilesetData } from 'constants/tiledMapData';\n\nwindow.PIXI = PIXI;\n\ninterface Props  {\n  texture: PIXI.Texture;\n  horizontalTiles: number;\n  layer: TiledLayerData;\n  tileset: TiledTilesetData;\n  spritesheet: PIXI.Spritesheet;\n};\n\nconst RectTileLayer = PixiComponent<Props, any>(\"RectTileLayer\", {\n  create(props: Props) {    \n    require('pixi-tilemap');    \n    var tileLayer = new window.PIXI.tilemap.CompositeRectTileLayer(0, [props.texture]);\n    return tileLayer;\n  },\n\n  applyProps(instance, oldProps: Props, props: Props) {\n    const {layer, tileset, horizontalTiles,spritesheet} = props;\n    if (!layer.data) {\n      return;\n    }\n    for (let i = 0; i < layer.data.length; i++) {\n      const w = tileset.tilewidth;\n      const h = tileset.tileheight;\n      const x = (i % horizontalTiles) * w;\n      const y = Math.floor(i / horizontalTiles) * h;\n    \n      if (layer.data[i] > 0) {\n        const spriteId = `${tileset.name}-${layer.data[i]}`;\n        instance.addFrame(spritesheet.textures[spriteId], x, y);\n      }\n    }\n  }\n});\n\nexport default RectTileLayer;\n\n","\nexport enum Categories {\n  A,\n  B,\n  C,\n  D\n}\n\nexport interface WMSData {\n  category: Categories;\n  productCode: string;\n  description: string; \n  slotting?: string;\n}\n\nexport const initialWMSState = [{\n  category: Categories.A,\n  productCode: \"IRN 590\",\n  description: \"Clothes Iron\",\n}, {\n  category: Categories.A,\n  productCode: \"CAM 679\",\n  description: \"Digital Camera\",\n}, {\n  category: Categories.A,\n  productCode: \"BAM 223\",\n  description: \"Baby monitor\",\n}, {\n  category: Categories.A,\n  productCode: \"SMK 019\",\n  description: \"Smoke detector\",\n  slotting: \"Usually sold with BAT 917\"\n}, {\n  category: Categories.A,\n  productCode: \"DLA 413\",\n  description: \"Desk lamp\",\n}, {\n  category: Categories.A,\n  productCode: \"VAC 082\",\n  description: \"Vacuum cleaner\",\n}, {\n  category: Categories.A,\n  productCode: \"BAT 917\",\n  description: \"Battery charger\",\n  slotting: \"Usually sold with SMK 019\"\n}, {\n  category: Categories.B,\n  productCode: \"VIR 555\",\n  description: \"Virtual Reality headset\",\n}, {\n  category: Categories.B,\n  productCode: \"PTV 555\",\n  description: \"Plasma TV Set\",\n  slotting: \"Usually sold with SPK 876\"\n}, {\n  category: Categories.B,\n  productCode: \"SPK 876\",\n  description: \"Home Theatre System/Speaker System\",\n  slotting: \"Usually sold with PTV 555\"\n}, {\n  category: Categories.B,\n  productCode: \"MWO 901\",\n  description: \"Microwave Oven\",\n}, {\n  category: Categories.B,\n  productCode: \"OTV 482\",\n  description: \"OLED TV Set\",\n}, {\n  category: Categories.C,\n  productCode: \"MIC 099\",\n  description: \"Microphone\",\n  slotting: \"Usually sold with DSC 743 as a karaoke set\"\n}, {\n  category: Categories.C,\n  productCode: \"WSH 322\",\n  description: \"Washing Machine\",\n}, {\n  category: Categories.C,\n  productCode: \"RFG 411\",\n  description: \"Refrigerator\",\n}, {\n  category: Categories.C,\n  productCode: \"SMX 041\",\n  description: \"Stand Mixer\",\n}, {\n  category: Categories.C,\n  productCode: \"DSC 743\",\n  description: \"Disco Ball\",\n  slotting: \"Usually sold with MIC 099 as a karaoke set\"\n}, {\n  category: Categories.D,\n  productCode: \"TPH 255\",\n  description: \"Telephone\",\n}, {\n  category: Categories.D,\n  productCode: \"CST 964\",\n  description: \"Cassette Player\",      \n}]\n","import React, { useState } from 'react';\nimport { TiledMapData, TiledLayerData, TiledTilesetData } from 'constants/tiledMapData';\nimport { Container, Text, Graphics } from '@inlet/react-pixi';\nimport { useEffect } from 'react';\nimport { SpritesheetData, SpriteData } from 'constants/spritesheetData';\nimport RectTileLayer from 'components/pixi/RectTileLayer';\nimport * as PIXI from 'pixi.js';\n\ninterface Props {\n  basePath: string;\n  data: TiledMapData;\n  setRackLocations: (tiles: [number, number][]) => void;\n  setDockLocations: (tiles: [number, number][]) => void;\n  setWallLocations: (tiles: [number, number][]) => void;\n}\n\nconst DEBUG = false;\n\nconst Tilemap = (props: Props) => {\n  const {basePath, data, setRackLocations, setDockLocations, setWallLocations} = props;\n  const [layers, setLayers] = useState<JSX.Element[]>();\n  const [debug, setDebug] = useState<JSX.Element[]>();\n\n  useEffect(() => {\n    const spritesheetData = parseSpritesheetData(data);\n    const tileset = getTileset(data);\n\n    const texture = PIXI.Texture.from(`${basePath}/${tileset.image}`);\n    const baseTexture = PIXI.BaseTexture.from(`${basePath}/${tileset.image}`);\n    const spritesheet = new PIXI.Spritesheet(baseTexture, spritesheetData);\n    const wallLocations: [number, number][] = [];\n\n    spritesheet.parse(() => {\n      // Rack tiles are marked on the tileset with property 'rack'\n      const rackTileIds = tileset.tiles?.filter(tile => tile.properties?.some(p => p.name === 'rack' && p.value)).map(t => t.id);\n      const dockTileIds = tileset.tiles?.filter(tile => tile.properties?.some(p => p.name === 'dock' && p.value)).map(t => t.id);\n      const layers = data.layers.filter(layer => layer.visible).map(layer => {\n\n        // walls are marked on the layer with property 'wall'\n        if (layer.properties && layer.properties.some(p => p.name === 'wall' && p.value === true)){\n          addAllTilesInLayerToList(wallLocations, layer, layer.width);\n        }\n        \n        return createTileLayer(layer, texture, data.width, tileset, spritesheet);\n      });\n\n      // The racks are placed in a special layer with property 'racks'\n      const placeholderLayer = data.layers.find(layer => layer.properties?.some(p => p.name === 'placeholders' && p.value));\n      if (placeholderLayer) {\n        const rackLocations: [number, number][] = [];\n        const dockLocations: [number, number][] = [];\n\n        placeholderLayer.data.forEach((id, index) => {         \n          if(rackTileIds && rackTileIds.some(rtId => rtId === id - tileset.firstgid)){\n            const x = (index % placeholderLayer.width);\n            const y = Math.floor(index / placeholderLayer.width);\n            rackLocations.push([x, y]);  \n          }\n          if(dockTileIds && dockTileIds.some(rtId => rtId === id - tileset.firstgid)){\n            const x = (index % placeholderLayer.width);\n            const y = Math.floor(index / placeholderLayer.width);\n            dockLocations.push([x, y]);  \n          }\n\n          setRackLocations(rackLocations);\n          setDockLocations(dockLocations);\n\n        });\n      }\n      setWallLocations(wallLocations);\n      setLayers(layers);\n      \n      if (DEBUG){\n        setDebug(getDebug(data.layers[0].data.length, data.layers[0].width, tileset.tilewidth, tileset.tileheight, wallLocations))\n      }\n    });\n\n  }, [basePath, data, setRackLocations, setDockLocations, setWallLocations]);\n  return (\n    <Container >\n      {layers}\n      {debug}\n    </Container>\n  );\n}\n\nexport default Tilemap;\n\nconst getDebug = (tileCount: number, columns: number, tileWidth: number, tileHeight: number, blockedTiles: number[][]) => {\n  const elements = [];\n  for (let i = 0 ; i < tileCount ; i++) {\n    const location = [(i % columns),  Math.floor(i / columns)];\n    const x = location[0] * tileWidth;\n    const y = location[1] * tileHeight;\n    var style = {\n      fontSize: 12,\n      align: 'center',\n      fill : '0x0',\n      strokeThickness : 1,\n      wordWrap : true,\n      wordWrapWidth : 440\n    };\n    // tile index\n    // elements.push(<Text key={`${x},${y}`} style={style} text={`${i}`} x={x} y={y}/>);\n\n    // tile location\n    elements.push(<Text key={`${x},${y}`} style={style} text={`[${location[0]},${location[1]}]`} x={x} y={y}/>);\n\n    // // blocked\n    elements.push(<Graphics\n      key={`blocked_${x},${y}`}\n      x={x} y={y}\n      draw={graphics => {\n        const line = 1;\n        const blocked = blockedTiles.some((loc) => loc[0] === location[0] && loc[1] === location[1]);\n        const color = blocked ? 0xFF3300 : 0x00FF00;\n        graphics.lineStyle(line, color);\n        graphics.drawRect(line / 2, line / 2, tileWidth - line / 2, tileHeight - line / 2);\n        graphics.endFill();\n      }}\n    />)\n  }\n  return elements;\n}\n\nconst getTileset = (mapData: TiledMapData) => {\n  if (!mapData.tilesets.length) {\n    throw new Error(\"No tilesets found! Can't continue\");\n  }\n  if (mapData.tilesets.length > 1) {\n    console.warn(\"Found more than one tileset. But we currently only support one.\");\n  }\n  if (mapData.tilesets[0].source) {\n    throw new Error(\"Please embed tilemaps in Tiled! Can't continue\");\n  }\n  return mapData.tilesets[0];\n}\n\nconst createTileLayer = (layer: TiledLayerData, texture: PIXI.Texture, horizontalTiles: number, tileset: TiledTilesetData, spritesheet: PIXI.Spritesheet) => {\n  return (\n    <RectTileLayer\n      key={layer.name}\n      texture={texture} \n      layer={layer} \n      horizontalTiles={horizontalTiles}\n      tileset={tileset}\n      spritesheet={spritesheet}\n    />\n  );\n}\n\nconst parseSpritesheetData = (mapData: TiledMapData): SpritesheetData => {\n  const tileset = getTileset(mapData);\n  const columns = tileset.columns;\n\n  const frames: { [name: string]: SpriteData } = {};\n  for (let i = 0; i < tileset.tilecount; i++) {\n    const w = tileset.tilewidth;\n    const h = tileset.tileheight;\n    const x = (i % columns) * w;\n    const y = Math.floor(i / columns) * h;\n\n    frames[`${tileset.name}-${i + 1}`] = { \n      frame: {x, y, w, h},\n      spriteSourceSize: {x, y, w, h},\n      rotated: false,\n      trimmed: false,\n      sourceSize: { w, h}\n    };\n  }\n  const image = tileset.image;\n  const size = { w: tileset.imagewidth, h: tileset.imageheight };\n  return {\n    frames,\n    meta: {\n      image,\n      size,\n      scale: 1\n    }\n  };\n}\n\n/** Add tiles in this layer to list */\nconst addAllTilesInLayerToList = (list: [number, number][], layer: TiledLayerData, columns: number) => {\n  layer.data.reduce((acc: [number, number][], tile, index) => {\n    if (tile > 0) {\n      const x = (index % columns);\n      const y = Math.floor(index / columns);\n      acc.push([x, y]);  \n    }\n    return acc;\n  }, list);\n}","\nexport enum GameState {\n  placingBoxes,\n  pickingBoxes,\n  complete,\n}\n\nexport type GameStateAction =\n | { type: 'startPicking' }\n | { type: 'completeGame' };\n\nexport const gameStateReducer = (state: GameState, action: GameStateAction ) => {\n  switch (action.type) {\n    case 'startPicking':\n      return GameState.pickingBoxes;\n    case 'completeGame':\n      return GameState.complete;\n    default:\n      return state;\n  }\n}","\nexport interface PickingList {\n  products: string[];\n  pickedProducts?: string[]; // when a product from `product` is picked it appears in this list\n  guy?: number;               // who is currently picking this list\n  complete?: boolean;        // when list is completely picked and the picker has returnwed with all the items \n  // clientName? \n  orderNo: string;\n}\n\nexport const generateInitialPickingLists = (): PickingList[] => {\n  // the actual products are not random, but the rest of the data is\n  const productPickingList = [\n    [\"MIC 099\", \"MWO 901\", \"DSC 743\"],\n    [\"WSH 322\"],\n    [\"SMX 041\", \"OTV 482\", \"CAM 679\"],\n    [\"SMK 019\", \"BAT 917\"],\n    [\"VAC 082\"],\n    [\"SPK 876\", \"PTV 555\", \"DLA 413\"],\n    [\"IRN 590\"],\n    [\"BAM 223\"],\n    [\"DSC 743\", \"MIC 099\"],\n    [\"DLA 413\"],\n    [\"DLA 413\"],\n    [\"SMK 019\", \"BAT 917\", \"RFG 411\"],\n  ];\n\n  return productPickingList.map(products => {\n    return {\n      orderNo: Math.random().toString().slice(2, 9),\n      products\n    } \n  });\n}\n\nexport type PickingListsAction =\n | { type: 'startPicking', guy: number, orderNo: string }\n | { type: 'completeProductPick', productCode: string, orderNo: string }\n | { type: 'completeOrder', orderNo: string };\n\n \nexport const pickingListsReducer = (state: PickingList[], action: PickingListsAction ) => {\n  switch (action.type) {\n    case 'startPicking':\n      return state.map(pL => {\n        if (pL.orderNo === action.orderNo) {\n          return { \n            ...pL,\n            guy: action.guy\n          }\n        }\n        return pL;\n      })\n    case 'completeProductPick':\n      return state.map(pL => {\n        if (pL.orderNo === action.orderNo) {\n          return { \n            ...pL,\n            pickedProducts: [ \n              ...pL.pickedProducts || [], \n              action.productCode\n            ]\n          }\n        }\n        return pL;\n      })\n    case 'completeOrder':\n      return state.map(pL => {\n        if (pL.orderNo === action.orderNo) {\n          return { \n            ...pL,\n            complete: true\n          }\n        }\n        return pL;\n      });\n    default:\n      return state;\n  }\n}","import { initialWMSState } from \"./wmsReducer\";\n\nexport interface BoxState {\n  location: [number, number];\n  inRack?: boolean; // true if in a rack, false if in a dock\n}\n\nexport interface WarehouseState {\n  boxes: { [id: string]: BoxState }\n}\n\nconst generateBoxLocationsAtDock = () => {\n  const products = initialWMSState.map(p => p.productCode);\n  products.sort(() => (0.5 - Math.random()));\n  return products.reduce((acc: { [id: string]: BoxState }, value: string, index: number) => {\n    acc[value] = { \n      location: [1 + index, 1]\n    }\n    return acc;\n  }, {});\n}\n\n// Use this for debugging. It shows a warehouse where all the boxes are placed\nconst generateBoxLocationsAtRacks = () => {\n  const products = initialWMSState.map(p => p.productCode);\n  products.sort(() => (0.5 - Math.random()));\n  const rackLocations: [number, number][] = [\n    [3, 9],\n    [4, 9],\n    [5, 9],\n    [6, 9],\n    [7, 9],\n    [8, 9],\n    [9, 9],\n    [11, 9],\n    [12, 9],\n    [13, 9],\n    [14, 9],\n    [15, 9],\n    [16, 9],\n    [17, 9],\n    [3, 6],\n    [4, 6],\n    [5, 6],\n    [6, 6],\n    [7, 6],\n    [8, 6],\n  ];\n\n  return products.reduce((acc: { [id: string]: BoxState }, value: string, index: number) => {\n    acc[value] = { \n      location: rackLocations[index],\n      inRack: true\n    }\n    return acc;\n  }, {});\n}\n\nexport const initialWarehouseState: WarehouseState = {\n  boxes: generateBoxLocationsAtDock()\n  // boxes: generateBoxLocationsAtRacks()\n}\n\n\nexport type WarehouseAction =\n | { type: 'placeBox'; productCode: string, location: [number, number], inRack: boolean };\n\nexport const warehouseReducer = (state: WarehouseState, action: WarehouseAction) => {\n  switch (action.type) {\n      case 'placeBox':\n        const { location, inRack } = action; \n        const boxes = { \n          ...state.boxes,\n          [action.productCode]: {\n              ...state.boxes[action.productCode],\n              location,\n              inRack\n          }\n        }\n        return { \n          ...state,\n          boxes\n        } ;\n    default: {\n        return state;\n    }\n  }\n}\n\n","import { initialWMSState, WMSData } from \"reducers/wmsReducer\";\nimport { generateInitialPickingLists, PickingList } from \"reducers/pickingListsReducer\";\nimport { initialWarehouseState, WarehouseState } from \"reducers/warehouseReducer\";\nimport { GameState } from \"reducers/gameStateReducer\";\n\nexport interface AppState {\n  statusText: string;\n  gameState: GameState,\n  wms: WMSData[];\n  pickingLists: PickingList[];\n  warehouse: WarehouseState; // Where all the boxes are in the warehouse\n  muted: boolean;\n}\n\n\nexport const initialState: AppState = {\n  statusText: \"\",\n  gameState: GameState.placingBoxes,\n  wms: initialWMSState,\n  pickingLists: generateInitialPickingLists(),\n  warehouse: initialWarehouseState,\n  muted: localStorage.getItem('muted') === 'true',\n}\n\n","export type StatusTextAction =\n | { type: 'setStatusText', text: string };\n\n\nexport const statusTextReducer = (state: string, action: StatusTextAction ) => {\n  switch (action.type) {\n    case 'setStatusText':\n      return action.text;\n    default:\n      return state;\n  }\n}","export type MutedReducerAction =\n | { type: 'setMuted', value: boolean };\n\n\nexport const mutedReducer = (state: boolean, action: MutedReducerAction ) => {\n  switch (action.type) {\n    case 'setMuted':\n      localStorage.setItem('muted', action.value ? 'true' : 'false');\n      return action.value;\n    default:\n      return state;\n  }\n}","import React, { createContext, useReducer } from 'react';\nimport { AppState, initialState } from 'appState';\nimport { gameStateReducer, GameStateAction } from 'reducers/gameStateReducer';\nimport { warehouseReducer, WarehouseAction } from 'reducers/warehouseReducer';\nimport { statusTextReducer, StatusTextAction } from 'reducers/statusTextReducer';\nimport { PickingListsAction, pickingListsReducer } from 'reducers/pickingListsReducer';\nimport { mutedReducer, MutedReducerAction } from 'reducers/mutedReducer';\n\n\nconst AppContext = createContext<{\n  state: AppState;\n  dispatch: React.Dispatch<AnyAction>;\n}>({\n  state: initialState,\n  dispatch: () => null\n});\n\n\nexport type AnyAction = GameStateAction | WarehouseAction | StatusTextAction | PickingListsAction | MutedReducerAction;\n\nconst reducer = (state: AppState, action: AnyAction) => {\n  return {\n    gameState: gameStateReducer(state.gameState, action as GameStateAction),\n    statusText: statusTextReducer(state.statusText, action as StatusTextAction),\n    wms: state.wms, // read only\n    pickingLists: pickingListsReducer(state.pickingLists, action as PickingListsAction), \n    warehouse: warehouseReducer(state.warehouse, action as WarehouseAction),\n    muted: mutedReducer(state.muted, action as MutedReducerAction), // todo: settingsreducer?\n  };\n};\n\nconst AppProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <AppContext.Provider value={{state, dispatch}}>\n      {children}\n    </AppContext.Provider>\n  )\n}\n\nexport { AppContext, AppProvider };","import React, { useRef,  useMemo } from 'react';\nimport { Sprite, Graphics, Container } from '@inlet/react-pixi';\nimport * as PIXI from 'pixi.js';\nimport { PixiPlugin } from 'gsap/all';\nimport { gsap } from 'gsap'\n\nPixiPlugin.registerPIXI(PIXI);\ngsap.registerPlugin(PixiPlugin);\n\ninterface Props {\n  position?: PIXI.Point;\n  location?: [number, number];\n  tileWidth: number;\n  tileHeight: number;\n  selected: boolean;\n  behindWall?: boolean;\n  onClick?: (event: PIXI.interaction.InteractionEvent) => void;\n  onDragged?: (event: PIXI.interaction.InteractionEvent) => void;\n  onReleased?: (event: PIXI.interaction.InteractionEvent) => void;\n  delay?: number; // Wait this long before showing\n}\n\n\nconst Box = (props: Props & React.ComponentProps<typeof Container>) => {\n  const {\n    location = [0, 0],\n    tileWidth = 0, \n    tileHeight = 0,\n    behindWall,\n    selected\n  } = props;\n  const ref = useRef<PIXI.Container>(null);\n  const imgRef = useRef<PIXI.Sprite>(null);\n  const dragRef = useRef<PIXI.Sprite>(null);\n  const offset = useRef<PIXI.Point>();\n  const data = useRef<PIXI.interaction.InteractionData>();\n\n  const {x, y} = useMemo(() => {\n    return { \n      x: location[0] * tileWidth,\n      y: location[1] * tileHeight,\n    };\n  }, [location, tileWidth, tileHeight]);\n  \n  const onDragStart = (event: PIXI.interaction.InteractionEvent) => {\n    data.current = event.data;\n    event.currentTarget.zIndex = 4;\n    event.stopPropagation(); \n    if (props.onClick) props.onClick(event);\n\n    offset.current = data.current.getLocalPosition(ref.current!);\n\n    imgRef.current!.visible = false;\n    dragRef.current!.visible = true;\n  }\n  \n  const onDragEnd = (event: PIXI.interaction.InteractionEvent) => {\n    if (props.behindWall) {\n      event.currentTarget.zIndex = 3;\n    } else {\n      event.currentTarget.zIndex = 1;\n    }\n    data.current = undefined;\n\n    if (props.onReleased) props.onReleased(event);\n    imgRef.current!.visible = true;\n    dragRef.current!.visible = false;\n\n  }\n  \n  const onDragMove = (event: PIXI.interaction.InteractionEvent) => {\n    if (data.current && ref.current){\n      const parentPos = data.current.getLocalPosition(ref.current!.parent);\n      const position = new PIXI.Point(parentPos.x - offset.current!.x, parentPos.y - offset.current!.y);\n\n      ref.current!.position = position;\n      if (props.onDragged) props.onDragged(event);\n    }\n  }\n\n  const img = `${process.env.PUBLIC_URL}/images/box1${ props.behindWall ? 'b' : ''}.png`;\n\n  return (\n    <Container\n      { ...props }\n      x={x}\n      y={y}\n      ref={ref}\n      zIndex={(props.behindWall) ? 3 : 1} // boxes in front: 1, guy: 2, boxes in back: 3\n      mousedown={onDragStart}\n      touchstart={onDragStart}\n      mouseup={onDragEnd}\n      mouseupoutside={onDragEnd}\n      mousemove={onDragMove}\n      touchmove={onDragMove}\n    >\n      {selected && (<Graphics draw={(graphics:PIXI.Graphics) => {\n          const line = 2;\n          const color = 0xffcc00;\n          graphics.clear();\n          graphics.lineStyle(line, color);\n          if (behindWall && !data.current) {\n            graphics.drawRect(2, tileHeight / 2 - 1, tileWidth - 4, tileHeight / 2 + 2 );\n          }\n          else {\n            graphics.drawRect(2, -tileHeight / 2 - 1, tileWidth - 4, tileHeight + 2 );\n          }\n          graphics.endFill();\n        }}\n      />)}\n      <Sprite \n        anchor={behindWall ? [0, -0.5] : [0, 0.5]}\n        image={img}\n        ref={imgRef}\n      />        \n      <Sprite \n        name=\"ghost\"\n        anchor={behindWall ? [0, -0.5] : [0, 0.5]}\n        alpha={0.9}\n        image={`${process.env.PUBLIC_URL}/images/box1.png`}\n        ref={dragRef}\n        visible={false}\n      />        \n      {/* </Graphics> */}\n    </Container>\n  );\n}\n\nexport default Box;\n\n","import React, { useState, useEffect, forwardRef, useRef } from 'react';\nimport { useApp, useTick, Container, Text } from \"@inlet/react-pixi\";\nimport * as PIXI from 'pixi.js';\nimport SpriteAnimated from './SpriteAnimated';\n\nexport enum Orientation {\n  front = 'front',\n  left = 'left',\n  right = 'right',\n  back = 'back',\n}\n\ninterface Props {\n  atlas: string;\n  carryBox: boolean;\n}\n\nconst DEBUG = false;\n//\nconst Guy = forwardRef<PIXI.Container, any>((props: Props & React.ComponentProps<typeof Container>, ref) => {\n  const {\n    atlas,\n    carryBox,\n    ...containerProps\n  } = props;\n\n  const [frames, setFrames] = useState<{ [key: string]: PIXI.Texture[]}|null>(null);\n\n  const [orientation, setOrientation] = useState<Orientation>(Orientation.right);\n  const app = useApp();\n  const lastPositionPoint = useRef<PIXI.Point>();\n\n  useTick(() => {\n    if (!ref || !(ref as any).current) return;\n    const currentPosition = (ref as any).current.position as PIXI.Point;\n    const lastPosition = lastPositionPoint.current;\n    if (lastPosition && !lastPosition.equals(currentPosition)) {\n      const angle: number = Math.atan2(currentPosition.y - lastPosition.y, currentPosition.x - lastPosition.x);\n      if ((angle >= Math.PI / -4 && angle <= 0) || (angle >= 0 && angle <= Math.PI / 4)) {\n        // going right\n        setOrientation(Orientation.right);     \n      }\n      else if (angle >= Math.PI / 4 && angle <= Math.PI * .75) {\n        // going down\n        setOrientation(Orientation.front);\n      }\n      else if (angle > Math.PI * .75 || angle < Math.PI * -0.75){\n        // going left\n        setOrientation(Orientation.left);\n      } else {\n        // Going up\n        setOrientation(Orientation.back);\n      }\n    }\n    lastPositionPoint.current = currentPosition.clone();\n  });\n\n  useEffect(() => {\n    const loadingComplete = () => {\n      const allFrames = app.loader.resources[atlas].data.frames;\n      const indexedTextures = Object.keys(allFrames).reduce((acc: any, frame: string) => {\n        // frames are in the format of: 'front1', 'front2', 'left-box1' etc\n        // create a mapping keyed by the part without the number\n        const animation = frame.substring(0, frame.length - 1);\n        if (!acc[animation]) {\n          acc[animation] = [];\n        }\n        acc[animation].push(PIXI.Texture.from(frame));\n        return acc;\n      }, {});\n\n      setFrames(indexedTextures);\n    }\n\n    app.loader.onComplete.once(loadingComplete);\n    if (!app.loader.loading) {\n      app.loader.add(atlas).load();\n    }\n    \n  }, [app.loader, app.loader.loading, atlas, props.name]);\n\n  if (!frames) return null;\n  const animationFrames = frames[`${orientation}${carryBox ? '-box': ''}`];\n\n  return (\n    <Container \n      ref={ref}\n      zIndex={2}\n      { ...containerProps}\n    >\n      <SpriteAnimated\n        animationSpeed={0.15}\n        isPlaying={true}\n        textures={animationFrames}\n        anchor={[0, 0.1]}\n      />\n      { DEBUG && (<Text style={{\n        fontSize: 12,\n        align: 'center',\n        fill: '0xfff',\n        strokeThickness: 1,\n        wordWrap : true,\n        wordWrapWidth : 440\n      }}\n      text={`${props.name}`} />\n      )}\n    </Container>\n  )\n});\n\n// const areEqual = (a: React.ComponentProps<typeof Container>, b: React.ComponentProps<typeof Container>) => {\n//   return true;\n// }\n// export default memo(Guy, () => (true));\nexport default Guy;\n","import { PixiComponent, applyDefaultProps, AnimatedSprite } from '@inlet/react-pixi';\nimport * as PIXI from 'pixi.js';\n\nexport default PixiComponent<React.ComponentProps<typeof AnimatedSprite>, PIXI.AnimatedSprite>('SpriteAnimated', {\n  create: ({ textures }) => {\n    const animatedSprite = new PIXI.AnimatedSprite(textures || [], true);\n    return animatedSprite;\n  },\n  applyProps: (instance, oldProps, newProps) => {\n    applyDefaultProps(instance, oldProps, newProps);\n    instance.gotoAndPlay(0);\n  },\n});\n\n\n","import React, { useState, useEffect, useRef } from 'react';\nimport * as PIXI from 'pixi.js';\nimport Guy from './Guy';\nimport { AnyAction } from 'components/context/AppProvider';\nimport { AStarFinder } from 'astar-typescript';\nimport { PickingList } from 'reducers/pickingListsReducer';\nimport { gsap, Linear } from 'gsap'\nimport { PixiPlugin } from 'gsap/all';\nimport { SPEED_MULTIPLIER } from 'constants/gameSettings';\n\nPixiPlugin.registerPIXI(PIXI);\ngsap.registerPlugin(PixiPlugin);\n\ninterface Props {\n  pickingList?: PickingList;\n  homeLocation: [number, number];\n  dispatch: React.Dispatch<AnyAction>;\n  aStar: AStarFinder;\n  getProductLocation: (productCode: string) => [number, number]\n}\n\nconst convertLocation = (location: [number, number]) => {\n  // This is the format AStarFind works with\n  return { x: location[0], y: location[1] }\n}\n//\nconst WarehouseGuy = (props: Props & React.ComponentProps<typeof Guy>) => {\n  const {\n    dispatch,\n    pickingList,\n    aStar,\n    homeLocation,\n    tileSize,\n    getProductLocation,\n    ...guyProps\n  } = props;\n\n  const guyRef = useRef(null);\n  const [carryBox, setCarryBox] = useState<boolean>(false);\n\n  const lastLocation = useRef<[number, number]>(homeLocation); // aStar has to know where this guy starts from\n  const currentDestination = useRef<string>();\n  \n  useEffect(() => {\n    if (!guyRef.current || !pickingList) return;\n\n\n    const { orderNo } = pickingList;\n    \n    //console.log(`[${props.name}] picking list: `, pickingList.products.find(value => !pickedProducts.includes(value)) )\n   \n    const productCode = pickingList.products.find(value => !(pickingList.pickedProducts || []).includes(value));\n    const destination = (productCode || 'home');\n    if (currentDestination.current && (currentDestination.current === destination)) {\n      //console.log(`[${props.name}] was already underway to ${productCode} ${currentDestination.current}`)\n      // todo: this is to prevent the guy from starting another animation when another guy picks up a boxes\n      // Would be better to useMemo or something but cba now\n      return;\n    }\n    currentDestination.current = productCode || destination;\n\n    gsap.killTweensOf(guyRef.current);\n    const tl = gsap.timeline();\n    const pathStartLocation = convertLocation(lastLocation.current || homeLocation);\n\n    if (productCode) {\n      // There is a product to pick, go fetch it\n      //console.log(`[${props.name}] We need to pick ${productCode} (${orderNo}). It's location is ${getProductLocation(productCode)}. We start at ${pathStartLocation.x}, ${pathStartLocation.y}}`);\n      \n      // Determine the path to this product\n      const path = aStar?.findPath(pathStartLocation, convertLocation(getProductLocation(productCode))) || [];\n\n      // create animation to walk this path\n      path.forEach((loc: number[]) => {\n        tl.to(guyRef.current, {\n          ease: Linear.easeNone,\n          pixi: { \n            x: loc[0] * tileSize,\n            y: loc[1] * tileSize\n          }, \n          duration: 1 / SPEED_MULTIPLIER  // it takes one second real time to walk one tile\n        });\n      }); \n      tl.to(guyRef.current, {\n        onComplete: () => { \n          // completed picking product\n          setCarryBox(true);\n          dispatch({ type: 'completeProductPick', productCode, orderNo});\n          //console.log(`[${props.name}] completed picking ${productCode} (${orderNo})`)\n          const endLocation = path[path.length - 1];\n          lastLocation.current = endLocation as [number, number];\n        },\n      })\n    } \n    else {\n      // All done with this order, return home\n      //console.log(`[${props.name}] I guess we are done. Time to return to ${homeLocation}`);\n        \n      // Determine the path home\n      const path = aStar?.findPath(pathStartLocation, convertLocation(homeLocation)) || [];\n      \n      // create animation to walk this path\n      path.forEach((loc: number[]) => {\n        tl.to(guyRef.current, {\n          ease: Linear.easeNone,\n          pixi: { \n            x: loc[0] * tileSize,\n            y: loc[1] * tileSize\n          }, \n          duration: 1 / SPEED_MULTIPLIER\n        });\n      }); \n      tl.to(guyRef.current, {\n        onComplete: () => { \n          // completed picking product\n          setCarryBox(false);\n          lastLocation.current = homeLocation;\n          dispatch({ type: 'completeOrder', orderNo });\n        },\n      })\n    }    \n  }, [aStar, dispatch, getProductLocation, homeLocation, pickingList, tileSize, props.name]);\n  \n  return (\n    <Guy\n      atlas={`${process.env.PUBLIC_URL}/images/sprites/guy/guy.json`} \n      x={homeLocation[0] * tileSize} \n      y={homeLocation[1] * tileSize}\n      carryBox={carryBox}\n      {...guyProps} \n      ref={guyRef} \n    />\n  )\n};\n\n// const areEqual = (a: React.ComponentProps<typeof Container>, b: React.ComponentProps<typeof Container>) => {\n//   return true;\n// }\n// export default memo(Guy, () => (true));\nexport default WarehouseGuy;\n","export const SPEED_MULTIPLIER = 6;","import React, { useEffect, useState, useRef, useCallback, useContext, useMemo } from \"react\";\nimport { Container, Stage } from '@inlet/react-pixi';\nimport { AStarFinder } from \"astar-typescript\";\nimport { TiledMapData } from 'constants/tiledMapData';\nimport Tilemap from './Tilemap';\nimport BridgedStage from \"./pixi/util/BridgedStage\";\nimport { AppContext } from \"./context/AppProvider\";\nimport * as PIXI from 'pixi.js';\nimport Box from \"./pixi/Box\";\nimport { PixiPlugin } from 'gsap/all';\nimport { gsap } from 'gsap'\nimport { GameState } from \"reducers/gameStateReducer\";\nimport WarehouseGuy from \"./pixi/WarehouseGuy\";\nimport sound from 'pixi-sound';\nimport { PickingList } from \"reducers/pickingListsReducer\";\n\nPixiPlugin.registerPIXI(PIXI);\ngsap.registerPlugin(PixiPlugin);\n\nwindow.PIXI = PIXI;\n// eslint-disable-next-line import/first\nimport 'pixi-tilemap'; // tilemap is not a real npm module :/\n\nexport interface Props {\n  tilemap: string;\n  width: number;\n  height: number;\n  onProductClick: (productCode: string) => void;\n}\n\nconst Scene = (props: Props & React.ComponentProps<typeof Container>) => {\n  const {tilemap, width, height, ...restProps} = props;\n  const {state, dispatch} = useContext(AppContext);\n  const {warehouse} = state;\n\n  const [mapData, setMapData] = useState<TiledMapData>();\n  const [rackLocations, setRackLocations] = useState<[number, number][]>([]);\n  const [dockLocations, setDockLocations] = useState<[number, number][]>([]);\n  const [wallLocations, setWallLocations] = useState<[number, number][]>([]);\n  const [selectedBox, setSelectedBox] = useState<string>();\n  const ref = useRef<PIXI.Container>(null);\n\n  const jsonPath = `${process.env.PUBLIC_URL}/${tilemap}`;\n\n  useEffect(() => {\n    new PIXI.Loader().add(jsonPath).load((loader)=>{         \n      const mapData: TiledMapData = loader.resources[jsonPath].data;\n      setMapData(mapData);\n    });\n  }, [jsonPath]);\n\n  const basePath = jsonPath.substr(0, jsonPath.lastIndexOf('/'));\n\n  useEffect(() => {\n    sound.add('bennyHill', `${process.env.PUBLIC_URL}/sound/BennyHill.mp3`);    \n  }, []);\n\n  useEffect(() => {\n    if (state.gameState === GameState.pickingBoxes && !state.muted) {\n      sound.play('bennyHill'); \n    } else {\n      sound.stop('bennyHill');\n    }\n  }, [state.gameState, state.muted])\n\n  /** Returns the location of the rack at given location \n   *  The tile south of a rack counts too. When no rack is found\n   * returns undefined */\n  const getRackAtLocation = useCallback((location: [number, number]) => {\n    // Racks are two tiles high but the box is placed at the top tile\n    return rackLocations.find((l) => (l[0] === location[0] && l[1] === location[1]))\n  }, [rackLocations]);\n\n  const getDockAtLocation = useCallback((location: [number, number]) => {\n    return dockLocations.find((l) => (l[0] === location[0] && l[1] === location[1]))\n  }, [dockLocations]);\n\n  const getProductLocation = (productCode: string) => {\n    return state.warehouse.boxes[productCode].location;\n  };\n  \n  // Converts pixel coordinate to scene location\n  const pointToSceneLocation = useCallback((point: PIXI.Point): [number, number] => {\n    if (!mapData?.tilewidth || !mapData.tileheight) {\n      return [0, 0];\n    }\n    return [Math.floor(point.x / mapData?.tilewidth), Math.floor(point.y / mapData?.tileheight)];\n  }, [mapData]);\n  \n  const getBoxNameAtLocation = (location: [number, number]) => {\n    const entry = Object.entries(warehouse.boxes)\n      .find(([name, box]) => box.location[0] === location[0] && box.location[1] === location[1]);\n    if (entry) return entry[0];\n  }\n\n  const handleClick = (productCode: string, event: PIXI.interaction.InteractionEvent) => {\n    props.onProductClick(productCode);\n\n    setSelectedBox(productCode);\n  }\n\n\n  const handleDragged = (productCode: string, event: PIXI.interaction.InteractionEvent) => {\n    const position = event.data.global;\n    const location = pointToSceneLocation(position); // tile location\n\n    const rackLocation = getRackAtLocation(location) || getDockAtLocation(location);\n\n    let tint = 0xFFFFFF;\n    if (rackLocation) {\n      const otherBoxName = getBoxNameAtLocation(rackLocation);\n      if (!otherBoxName || otherBoxName === productCode) {\n        tint = 0x00FF30; // Can drop here\n      } else {\n        tint = 0xFF3300; // Can't drop on another box\n      }\n    }\n    setTint(event.currentTarget, tint);\n  }\n\n  const handleBoxDragEnd = (productCode: string, event: PIXI.interaction.InteractionEvent) => {\n    const position = event.data.global;\n    const location = pointToSceneLocation(position); // tile location\n\n    setTint(event.currentTarget, 0xFFFFFF);\n\n    const rackLocation = getRackAtLocation(location);\n    const dockLocation = getDockAtLocation(location);\n    const rackOrDockLoc = rackLocation || dockLocation;\n    if (rackOrDockLoc) {\n      const otherBoxName = getBoxNameAtLocation(rackOrDockLoc);\n      if (!otherBoxName || otherBoxName === productCode) {\n        const inRack = !!rackLocation;\n        dispatch({ type: 'placeBox', productCode, location: rackOrDockLoc!, inRack});\n        return;\n      }\n    }\n\n    // Couldn't place, fly back to origin\n    const box = warehouse.boxes[productCode];\n    const originX = box.location[0] * mapData!.tilewidth;\n    const originY = box.location[1] * mapData!.tileheight;\n\n    gsap.to(event.currentTarget, { \n      duration: .5,\n      ease: \"bounce.out\",\n      pixi: {\n        x: originX,\n        y: originY\n      }\n    });\n  }\n\n  const renderBoxes = () => {\n    if (!mapData || !wallLocations.length) return null;\n    \n    return Object.entries(warehouse.boxes).map(([name, box]) => (\n      <Box \n        location={box.location} \n        tileWidth={mapData.tilewidth} \n        tileHeight={mapData.tileheight}\n        selected={name === selectedBox}\n        onClick={(event) => handleClick(name, event)}\n        onDragged={(event) => handleDragged(name, event)}\n        onReleased={(event) => handleBoxDragEnd(name, event)}\n        key={name}\n        behindWall={isNorthOfWall(box.location, wallLocations)}\n        interactive={state.gameState === GameState.placingBoxes}\n      />\n    ));\n  }\n\n  /** Returns true if the tile is blocked */\n  const locationIsBlocked = useCallback((location: [number, number]) => {\n    return wallLocations.some((l) => l[0] === location[0] && l[1] === location[1]);\n  }, [wallLocations]);\n\n  const aStar = useMemo(() => {\n    if (!mapData || !wallLocations.length) {\n        return null;\n    }\n    const matrix: number[][] = [];\n    for (let y = 0; y < mapData.height; y++) {\n        const row: number[] = [];\n        for (let x = 0; x < mapData.width; x++) {\n            const location: [number, number] = [x, y];\n            const blocked = locationIsBlocked(location);\n            row.push(blocked ? 1 : 0);\n        }\n        matrix.push(row);\n    }\n    return new AStarFinder({\n      grid: {\n          matrix\n      },\n      diagonalAllowed: false,\n      includeStartNode: false,\n      heuristic: \"Manhatten\",\n      weight: 0,\n    });\n  }, [mapData, locationIsBlocked, wallLocations]);\n\n  const [pickingList1, setPickingList1] = useState<PickingList>();\n  const [pickingList2, setPickingList2] = useState<PickingList>();\n  const [pickingList3, setPickingList3] = useState<PickingList>();\n\n  useEffect(() => {\n    if (state.gameState === GameState.pickingBoxes) {\n      setSelectedBox(undefined);\n\n      const nextPickingList1 = state.pickingLists.find((pL, i) => !pL.complete && i % 3 === 0);\n      setPickingList1(nextPickingList1);\n      const nextPickingList2 = state.pickingLists.find((pL, i) => !pL.complete && i % 3 === 1);\n      setPickingList2(nextPickingList2);\n      const nextPickingList3 = state.pickingLists.find((pL, i) => !pL.complete && i % 3 === 2);\n      setPickingList3(nextPickingList3);\n      if (!nextPickingList1 && !nextPickingList2 && !nextPickingList3) {\n        dispatch({ type: 'completeGame' });\n      }\n    }\n  }, [dispatch, state.gameState, state.pickingLists]);\n  \n\n  const renderGuys = () => {\n    if (!aStar) return null;\n\n    return (\n      <>\n        <WarehouseGuy\n          name={'guy1'}\n          pickingList={pickingList1}  \n          homeLocation={[9, 12]}\n          tileSize={mapData!.tilewidth}\n          getProductLocation={getProductLocation}\n          dispatch={dispatch}\n          aStar={aStar}\n          visible={state.gameState === GameState.pickingBoxes}\n        />\n        <WarehouseGuy\n          name={'guy2'}\n          pickingList={pickingList2}  \n          homeLocation={[10, 12]}\n          tileSize={mapData!.tilewidth}\n          getProductLocation={getProductLocation}\n          dispatch={dispatch}\n          aStar={aStar}\n          visible={state.gameState === GameState.pickingBoxes}\n        />\n        <WarehouseGuy\n          name={'guy3'}\n          pickingList={pickingList3}  \n          homeLocation={[11, 12]}\n          tileSize={mapData!.tilewidth}\n          getProductLocation={getProductLocation}\n          dispatch={dispatch}\n          aStar={aStar}\n          visible={state.gameState === GameState.pickingBoxes}\n        />\n      </> \n    )\n  }\n\n  return (\n    <Stage width={width} height={height}>\n      <Container \n        ref={ref}\n        interactive={true}\n        hitArea={new PIXI.RoundedRectangle(0, 0, width, height, 0)}\n        sortableChildren\n        {...restProps}\n      >\n        { mapData && (\n          <>\n            <Tilemap \n              basePath={basePath} \n              data={mapData} \n              setRackLocations={setRackLocations}\n              setDockLocations={setDockLocations}\n              setWallLocations={setWallLocations}\n            />\n            {renderBoxes()}\n            {renderGuys()}\n          </>\n        )}\n      </Container>\n    </Stage>\n  );\n}\n\nexport default Scene;\n\n// Sets tint on box\nconst setTint = (obj: PIXI.DisplayObject, tint: number) => {\n  const ghost = (obj as PIXI.Container).children.find(c => c.name === 'ghost');\n  if (ghost) {\n    (ghost as PIXI.Sprite).tint = tint; \n  }\n}\n\n// Returns true if the tile south of this one is a wall\nconst isNorthOfWall = (location: [number, number], wallLocations: [number, number][]) => {\n  return wallLocations.some(wL => wL[0] === location[0] && wL[1] === location[1] + 1);\n}\n","import React, { useEffect, useRef, useContext } from \"react\";\nimport { AppContext } from \"components/context/AppProvider\";\nimport { Categories, WMSData } from \"reducers/wmsReducer\";\n\n\ninterface Props {\n  selectedProduct?: string;\n}\n\nconst SKUProfile = (props: Props) => {\n  const tableRef = useRef<HTMLTableElement>(null);\n  const { state } = useContext(AppContext);\n  const data = state.wms;\n\n  useEffect(() => {\n    if (!tableRef.current) return;\n    const table = tableRef.current;\n    \n    // add highlight class \n    const row = table.querySelector(`tr[data-code=\"${props.selectedProduct}\"]`)\n    row?.classList.add(\"highlight\");\n    row?.scrollIntoView({ block: 'end'});\n    return () => {\n    // Remove highlight class from prevously highlighted row\n      table.querySelector(\".highlight\")?.classList.remove(\"highlight\");\n    }\n  }, [props.selectedProduct]);\n\n  const renderContent = () => {\n    return (\n      <table ref={tableRef}>\n        <tbody>\n        <tr><td colSpan={3} className=\"category-header-a\">A. Fast-moving</td></tr>\n        {data.filter(row => row.category === Categories.A).map(row => renderRow(row))}\n        <tr><td colSpan={3} className=\"category-header-b\">B. Medium-moving</td></tr>\n        {data.filter(row => row.category === Categories.B).map(row => renderRow(row))}\n        <tr><td colSpan={3} className=\"category-header-c\">C. Slow-moving</td></tr>\n        {data.filter(row => row.category === Categories.C).map(row => renderRow(row))}\n        <tr><td colSpan={3} className=\"category-header-d\">D. Not-moving</td></tr>\n        {data.filter(row => row.category === Categories.D).map(row => renderRow(row))}\n        </tbody>\n      </table>\n    )\n  }\n\n  const renderRow = (row: WMSData) => {\n    return (\n      <tr key={row.productCode} data-code={row.productCode}>\n        <td>{row.productCode}</td>\n        <td>{row.description}</td>\n        <td>{row.slotting || \"\"}</td>\n      </tr>\n    )\n  }\n  return (\n    <>\n      <h2>SKU velocity profile</h2>\n      {renderContent()}\n    </>\n  )\n}\n\nexport default SKUProfile;","import React, { useContext } from \"react\";\nimport { AppContext } from \"components/context/AppProvider\";\nimport { PickingList } from \"reducers/pickingListsReducer\";\n\nconst PickingLists = () => {\n  const { state } = useContext(AppContext);\n  const data = state.pickingLists;\n  const productNameMap = state.wms.reduce((acc: {[key: string]: string}, value) => {\n    if (!acc[value.productCode]) {\n      acc[value.productCode] = value.description;\n    };\n    return acc;\n  }, {});\n  // useEffect(() => {\n  //   if (!tableRef.current) return;\n  //   const table = tableRef.current;\n    \n  //   // add highlight class \n  //   const row = table.querySelector(`tr[data-code=\"${props.selectedProduct}\"]`)\n  //   row?.classList.add(\"highlight\");\n  //   row?.scrollIntoView({ block: 'end'});\n  //   return () => {\n  //   // Remove highlight class from prevously highlighted row\n  //     table.querySelector(\".highlight\")?.classList.remove(\"highlight\");\n  //   }\n  // }, [props.selectedProduct]);\n\n  const renderContent = () => {\n    return (\n      data.map(pickingList => (\n        <div key={pickingList.orderNo}>\n          {renderPickingList(pickingList)}\n        </div>\n      ))\n    )\n  }\n\n  const renderPickingList = (pList: PickingList) => {\n    return (\n      <table>\n        <tbody>\n          <tr>\n            <td colSpan={3}>Order no: {pList.orderNo}</td>\n          </tr>\n          { pList.products.map(p => renderProduct(pList, p)) }\n        </tbody>\n      </table>\n    )\n  }\n\n  const renderProduct = (pList: PickingList, productCode: string) => {\n    const completed = pList.pickedProducts?.some(p => p === productCode);\n\n    return (\n      <tr key={productCode} className={completed ? \"completed\" : \"\"}>\n        <td></td>\n        <td>{productCode}</td>\n        <td>{productNameMap[productCode]}</td>\n      </tr>\n    )\n  }\n\n  return (\n    <>\n      <h2>Picking lists</h2>\n      {renderContent()}\n    </>\n  )\n}\n\nexport default PickingLists;","import React, { useContext } from 'react';\nimport { AppContext } from 'components/context/AppProvider';\nimport './ipad.css';\nimport SKUProfile from './content/SKUProfile';\nimport PickingLists from './content/PickingLists';\nimport { GameState } from 'reducers/gameStateReducer';\n\ninterface Props {\n  selectedProduct?: string;\n}\n\nconst IPad = (props: Props) => {\n  const { state } = useContext(AppContext);\n  const { gameState } = state;\n\n\n  const renderContent = () => {\n    switch (gameState) {\n      case GameState.placingBoxes:\n        return <SKUProfile selectedProduct={props.selectedProduct} />;\n      case GameState.pickingBoxes:\n        return <PickingLists />;\n    }\n  }\n\n  return (\n    <div className=\"ipad\">\n      <div className=\"content\">\n        {renderContent()}\n      </div>\n    </div>      \n  )\n}\n\nexport default IPad;","import React, { useContext } from \"react\";\nimport { AppContext } from \"components/context/AppProvider\";\nimport './startButton.css';\nimport { GameState } from \"reducers/gameStateReducer\";\n\nconst StartButton = () => {\n  const { state, dispatch } = useContext(AppContext);\n\n  const handleClick = () => {\n    switch (state.gameState) {\n      case GameState.placingBoxes:\n        const allBoxedPlaced = !Object.values(state.warehouse.boxes).some(b => !b.inRack);\n        if(!allBoxedPlaced) {\n          dispatch({ type: 'setStatusText', text: \"First place all goods in the warehouse!\"});\n          return;\n        }\n        dispatch({ type: 'startPicking'});\n    \n        break;\n      case GameState.complete:\n        // eslint-disable-next-line no-restricted-globals\n        location.reload();\n        break;\n    }\n  };\n\n  switch (state.gameState) {\n    case GameState.placingBoxes:\n      return <button onClick={handleClick} className=\"start-button\"><h1>Start</h1></button>;\n    case GameState.complete:\n      return <button onClick={handleClick} className=\"start-button\"><h1>Restart</h1></button>;\n    default:\n      return null;\n  }\n}\n\nexport default StartButton;","import React, { useContext, useRef, useEffect, useState } from \"react\";\nimport { AppContext } from \"components/context/AppProvider\";\nimport './statusText.css';\nimport { GameState } from \"reducers/gameStateReducer\";\nimport { SPEED_MULTIPLIER } from \"constants/gameSettings\";\n\nconst StatusText = () => {\n  const { state } = useContext(AppContext);\n  const text = state.statusText;\n  const [time, setTime] = useState<number>(0);\n\n  useEffect(() => {\n    let timeout: NodeJS.Timeout;\n    const start = performance.now();\n    if (state.gameState === GameState.pickingBoxes) {\n      const update = () => {\n        setTime(time => time + (performance.now() - start));\n      };\n      timeout = setInterval(update, 100);\n    }\n    return () => {\n      clearTimeout(timeout);\n    }\n  }, [state.gameState, time]);\n\n  if (state.gameState === GameState.pickingBoxes) {\n    return (\n      <div className=\"status\">\n        <div className=\"timer\">\n          {formatTime(time)}\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"status\">{text}</div>\n  );\n}\n\nexport default StatusText;\n\nconst formatTime = (ms: number ) => {\n  let seconds = (ms / 1000);\n  var hours = Math.floor( seconds / 3600 ); // 3,600 seconds in 1 hour\n  seconds = seconds % 3600;\n  var minutes = Math.floor( seconds / 60 );\n  seconds = seconds % 60;\n  if (hours > 0) {\n    return `${padLeft(hours)}:${padLeft(minutes)}:${seconds.toFixed(1).padStart(4, '0')}`;\n  } \n  return `${padLeft(minutes)}:${seconds.toFixed(1).padStart(4, '0')}`;\n}\n\nconst padLeft = (input: number) => {\n  return `${input}`.padStart(2, '0');\n}","import React, { useState, useContext } from \"react\";\nimport './settings.css';\nimport { AppContext } from \"components/context/AppProvider\";\n\nconst Settings = () => {\n  const { state, dispatch } = useContext(AppContext);\n\n  const handleMutedChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch({ type: 'setMuted', value: !e.target.checked})  \n  }\n  return (\n    <div className=\"settings\">\n      <input type=\"checkbox\" onChange={handleMutedChange} checked={state.muted === false} />\n      <label>Sound on</label>\n    </div>\n  )\n}\n\nexport default Settings;","import React, { useState } from 'react';\nimport './App.css';\nimport Scene from 'components/Scene';\nimport * as PIXI  from 'pixi.js';\nimport { Stage } from '@inlet/react-pixi';\nimport IPad from 'components/ui/IPad';\nimport StartButton from 'components/ui/StartButton';\nimport { AppProvider } from 'components/context/AppProvider';\nimport StatusText from 'components/ui/StatusText';\nimport Settings from 'components/ui/Settings';\nwindow.PIXI = PIXI;\n\nfunction App() {\n  \n  const width = 21 * 32;\n  const height = 32 * 13;\n\n  const [selectedProduct, setSelectedProduct] = useState<string>();\n\n  return (\n    <AppProvider>\n      <div className=\"App\">\n        <Settings />\n        <Scene \n          tilemap=\"scenes/level1.json\" \n          width={width} \n          height={height}\n          onProductClick={setSelectedProduct}\n        />\n        <IPad selectedProduct={selectedProduct}/>\n        <StartButton />\n        <StatusText />\n      </div>\n    </AppProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}