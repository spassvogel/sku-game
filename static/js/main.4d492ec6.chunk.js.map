{"version":3,"sources":["components/pixi/RectTileLayer.tsx","reducers/wmsReducer.ts","components/Tilemap.tsx","reducers/gameStateReducer.ts","reducers/pickingListsReducer.ts","reducers/warehouseReducer.ts","appState.ts","reducers/statusTextReducer.ts","reducers/mutedReducer.ts","reducers/timeReducer.ts","components/context/AppProvider.tsx","components/pixi/Box.tsx","components/pixi/Guy.tsx","components/pixi/SpriteAnimated.tsx","components/pixi/WarehouseGuy.tsx","constants/gameSettings.ts","components/Scene.tsx","components/ui/IPad/content/SKUProfile.tsx","components/ui/IPad/content/PickingLists.tsx","components/ui/IPad/index.tsx","components/ui/StartButton.tsx","components/ui/StatusText.tsx","components/ui/Settings/index.tsx","components/ui/GameOverScreen/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["window","PIXI","Categories","RectTileLayer","PixiComponent","create","props","require","tilemap","CompositeRectTileLayer","texture","applyProps","instance","oldProps","layer","tileset","horizontalTiles","spritesheet","data","i","length","w","tilewidth","h","tileheight","x","y","Math","floor","spriteId","name","addFrame","textures","Tilemap","basePath","setRackLocations","setRackFarLocations","setDockLocations","setWallLocations","useState","layers","setLayers","debug","useEffect","spritesheetData","parseSpritesheetData","getTileset","from","image","baseTexture","wallLocations","parse","rackTileIds","tiles","filter","tile","properties","some","p","value","map","t","id","rackFarTileIds","dockTileIds","visible","addAllTilesInLayerToList","width","createTileLayer","placeholderLayer","find","rackLocations","rackFarLocations","dockLocations","forEach","index","rtId","firstgid","push","mapData","tilesets","Error","console","warn","source","key","columns","frames","tilecount","frame","spriteSourceSize","rotated","trimmed","sourceSize","meta","size","imagewidth","imageheight","scale","list","reduce","acc","GameState","initialWMSState","category","A","productCode","description","slotting","B","C","D","pickingListsReducer","state","action","type","pL","orderNo","guy","pickedProducts","complete","undefined","initialWarehouseState","boxes","products","sort","random","location","generateBoxLocationsAtDock","warehouseReducer","inRack","gameStateReducer","pickingBoxes","placingBoxes","initialState","statusText","gameState","wms","pickingLists","toString","slice","warehouse","muted","localStorage","getItem","time","statusTextReducer","text","mutedReducer","setItem","timeReducer","performance","now","start","AppContext","createContext","dispatch","reducer","AppProvider","children","useReducer","Provider","PixiPlugin","registerPIXI","gsap","registerPlugin","Orientation","Box","tileWidth","tileHeight","behindWall","selected","ref","useRef","imgRef","dragRef","offset","useMemo","onDragStart","event","current","currentTarget","zIndex","stopPropagation","onClick","getLocalPosition","onDragEnd","onReleased","onDragMove","parentPos","parent","position","onDragged","img","process","mousedown","touchstart","mouseup","mouseupoutside","mousemove","touchmove","draw","graphics","clear","lineStyle","drawRect","endFill","anchor","alpha","newProps","applyDefaultProps","gotoAndPlay","Guy","forwardRef","atlas","carryBox","containerProps","setFrames","right","orientation","setOrientation","app","useApp","lastPositionPoint","useTick","currentPosition","lastPosition","equals","angle","atan2","PI","front","left","back","clone","loader","onComplete","once","allFrames","resources","indexedTextures","Object","keys","animation","substring","loading","add","load","animationFrames","SpriteAnimated","animationSpeed","isPlaying","convertLocation","WarehouseGuy","pickingList","aStar","homeLocation","tileSize","getProductLocation","guyProps","guyRef","setCarryBox","lastLocation","currentDestination","includes","destination","killTweensOf","tl","timeline","pathStartLocation","far","path","findPath","loc","to","ease","Linear","easeNone","pixi","duration","delay","endLocation","Scene","height","restProps","useContext","setMapData","selectedBox","setSelectedBox","jsonPath","substr","lastIndexOf","sound","stop","play","getRackAtLocation","useCallback","l","getDockAtLocation","pointToSceneLocation","point","getBoxNameAtLocation","entry","entries","box","locationIsBlocked","matrix","row","blocked","AStarFinder","grid","diagonalAllowed","includeStartNode","heuristic","weight","pickingList1","setPickingList1","pickingList2","setPickingList2","pickingList3","setPickingList3","nextPickingList1","nextPickingList2","nextPickingList3","interactive","hitArea","sortableChildren","onProductClick","global","rackLocation","tint","otherBoxName","setTint","handleDragged","dockLocation","rackOrDockLoc","originX","originY","handleBoxDragEnd","isNorthOfWall","obj","ghost","c","wL","SKUProfile","tableRef","table","querySelector","selectedProduct","classList","scrollIntoView","block","remove","renderRow","data-code","colSpan","className","PickingLists","productNameMap","renderPickingList","pList","renderProduct","completed","IPad","renderContent","StartButton","values","b","reload","StatusText","timeout","setInterval","clearTimeout","progressBarWidth","min","progressColor","style","backgroundColor","formatTime","ms","seconds","hours","minutes","padLeft","toFixed","padStart","input","Settings","onChange","e","target","checked","GameOverScreen","App","setSelectedProduct","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4d492ec6.chunk.js","sourcesContent":["import { PixiComponent } from \"@inlet/react-pixi\";\nimport * as PIXI  from 'pixi.js';\nimport { TiledLayerData, TiledTilesetData } from 'constants/tiledMapData';\n\nwindow.PIXI = PIXI;\n\ninterface Props  {\n  texture: PIXI.Texture;\n  horizontalTiles: number;\n  layer: TiledLayerData;\n  tileset: TiledTilesetData;\n  spritesheet: PIXI.Spritesheet;\n};\n\nconst RectTileLayer = PixiComponent<Props, any>(\"RectTileLayer\", {\n  create(props: Props) {    \n    require('pixi-tilemap');    \n    var tileLayer = new window.PIXI.tilemap.CompositeRectTileLayer(0, [props.texture]);\n    return tileLayer;\n  },\n\n  applyProps(instance, oldProps: Props, props: Props) {\n    const {layer, tileset, horizontalTiles,spritesheet} = props;\n    if (!layer.data) {\n      return;\n    }\n    for (let i = 0; i < layer.data.length; i++) {\n      const w = tileset.tilewidth;\n      const h = tileset.tileheight;\n      const x = (i % horizontalTiles) * w;\n      const y = Math.floor(i / horizontalTiles) * h;\n    \n      if (layer.data[i] > 0) {\n        const spriteId = `${tileset.name}-${layer.data[i]}`;\n        instance.addFrame(spritesheet.textures[spriteId], x, y);\n      }\n    }\n  }\n});\n\nexport default RectTileLayer;\n\n","\nexport enum Categories {\n  A,\n  B,\n  C,\n  D\n}\n\nexport interface WMSData {\n  category: Categories;\n  productCode: string;\n  description: string; \n  slotting?: string;\n}\n\nexport const initialWMSState = [{\n  category: Categories.A,\n  productCode: \"IRN 590\",\n  description: \"Clothes Iron\",\n}, {\n  category: Categories.A,\n  productCode: \"CAM 679\",\n  description: \"Digital Camera\",\n}, {\n  category: Categories.A,\n  productCode: \"BAM 223\",\n  description: \"Baby monitor\",\n}, {\n  category: Categories.A,\n  productCode: \"SMK 019\",\n  description: \"Smoke detector\",\n  slotting: \"Usually sold with BAT 917\"\n}, {\n  category: Categories.A,\n  productCode: \"DLA 413\",\n  description: \"Desk lamp\",\n}, {\n  category: Categories.A,\n  productCode: \"VAC 082\",\n  description: \"Vacuum cleaner\",\n}, {\n  category: Categories.A,\n  productCode: \"BAT 917\",\n  description: \"Battery charger\",\n  slotting: \"Usually sold with SMK 019\"\n}, {\n  category: Categories.B,\n  productCode: \"VIR 555\",\n  description: \"Virtual Reality headset\",\n}, {\n  category: Categories.B,\n  productCode: \"PTV 555\",\n  description: \"Plasma TV Set\",\n  slotting: \"Usually sold with SPK 876\"\n}, {\n  category: Categories.B,\n  productCode: \"SPK 876\",\n  description: \"Home Theatre System/Speaker System\",\n  slotting: \"Usually sold with PTV 555\"\n}, {\n  category: Categories.B,\n  productCode: \"MWO 901\",\n  description: \"Microwave Oven\",\n}, {\n  category: Categories.B,\n  productCode: \"OTV 482\",\n  description: \"OLED TV Set\",\n}, {\n  category: Categories.C,\n  productCode: \"MIC 099\",\n  description: \"Microphone\",\n  slotting: \"Usually sold with DSC 743 as a karaoke set\"\n}, {\n  category: Categories.C,\n  productCode: \"WSH 322\",\n  description: \"Washing Machine\",\n}, {\n  category: Categories.C,\n  productCode: \"RFG 411\",\n  description: \"Refrigerator\",\n}, {\n  category: Categories.C,\n  productCode: \"SMX 041\",\n  description: \"Stand Mixer\",\n}, {\n  category: Categories.C,\n  productCode: \"DSC 743\",\n  description: \"Disco Ball\",\n  slotting: \"Usually sold with MIC 099 as a karaoke set\"\n}, {\n  category: Categories.D,\n  productCode: \"TPH 255\",\n  description: \"Telephone\",\n}, {\n  category: Categories.D,\n  productCode: \"CST 964\",\n  description: \"Cassette Player\",      \n}]\n","import React, { useState } from 'react';\nimport { TiledMapData, TiledLayerData, TiledTilesetData } from 'constants/tiledMapData';\nimport { Container, Text, Graphics } from '@inlet/react-pixi';\nimport { useEffect } from 'react';\nimport { SpritesheetData, SpriteData } from 'constants/spritesheetData';\nimport RectTileLayer from 'components/pixi/RectTileLayer';\nimport * as PIXI from 'pixi.js';\n\ninterface Props {\n  basePath: string;\n  data: TiledMapData;\n  setRackLocations: (tiles: [number, number][]) => void;\n  setRackFarLocations: (tiles: [number, number][]) => void;\n  setDockLocations: (tiles: [number, number][]) => void;\n  setWallLocations: (tiles: [number, number][]) => void;\n}\n\nconst DEBUG = false;\n\nconst Tilemap = (props: Props) => {\n  const {\n    basePath, \n    data, \n    setRackLocations, \n    setRackFarLocations, \n    setDockLocations, \n    setWallLocations\n  } = props;\n  const [layers, setLayers] = useState<JSX.Element[]>();\n  const [debug, setDebug] = useState<JSX.Element[]>();\n\n  useEffect(() => {\n    const spritesheetData = parseSpritesheetData(data);\n    const tileset = getTileset(data);\n\n    const texture = PIXI.Texture.from(`${basePath}/${tileset.image}`);\n    const baseTexture = PIXI.BaseTexture.from(`${basePath}/${tileset.image}`);\n    const spritesheet = new PIXI.Spritesheet(baseTexture, spritesheetData);\n    const wallLocations: [number, number][] = [];\n\n    spritesheet.parse(() => {\n      // Rack tiles are marked on the tileset with property 'rack'\n      const rackTileIds = tileset.tiles?.filter(tile => tile.properties?.some(p => p.name === 'rack' && p.value)).map(t => t.id);\n      const rackFarTileIds = tileset.tiles?.filter(tile => tile.properties?.some(p => p.name === 'far' && p.value)).map(t => t.id);\n      const dockTileIds = tileset.tiles?.filter(tile => tile.properties?.some(p => p.name === 'dock' && p.value)).map(t => t.id);\n      const layers = data.layers.filter(layer => layer.visible).map(layer => {\n\n        // walls are marked on the layer with property 'wall'\n        if (layer.properties && layer.properties.some(p => p.name === 'wall' && p.value === true)){\n          addAllTilesInLayerToList(wallLocations, layer, layer.width);\n        }\n        \n        return createTileLayer(layer, texture, data.width, tileset, spritesheet);\n      });\n\n      // The racks are placed in a special layer with property 'racks'\n      const placeholderLayer = data.layers.find(layer => layer.properties?.some(p => p.name === 'placeholders' && p.value));\n      if (placeholderLayer) {\n        const rackLocations: [number, number][] = [];\n        const rackFarLocations: [number, number][] = [];\n        const dockLocations: [number, number][] = [];\n\n        placeholderLayer.data.forEach((id, index) => {         \n          if(rackTileIds && rackTileIds.some(rtId => rtId === id - tileset.firstgid)){\n            const x = (index % placeholderLayer.width);\n            const y = Math.floor(index / placeholderLayer.width);\n            rackLocations.push([x, y]);  \n          }\n          if(rackFarTileIds && rackFarTileIds.some(rtId => rtId === id - tileset.firstgid)){\n            const x = (index % placeholderLayer.width);\n            const y = Math.floor(index / placeholderLayer.width);\n            rackFarLocations.push([x, y]);  \n          }\n          if(dockTileIds && dockTileIds.some(rtId => rtId === id - tileset.firstgid)){\n            const x = (index % placeholderLayer.width);\n            const y = Math.floor(index / placeholderLayer.width);\n            dockLocations.push([x, y]);  \n          }\n\n          setRackLocations(rackLocations);\n          setRackFarLocations(rackFarLocations);\n          setDockLocations(dockLocations);\n        });\n      }\n      setWallLocations(wallLocations);\n      setLayers(layers);\n      \n      if (DEBUG){\n        setDebug(getDebug(data.layers[0].data.length, data.layers[0].width, tileset.tilewidth, tileset.tileheight, wallLocations))\n      }\n    });\n\n  }, [basePath, data, setRackLocations, setDockLocations, setWallLocations]);\n  return (\n    <Container >\n      {layers}\n      {debug}\n    </Container>\n  );\n}\n\nexport default Tilemap;\n\nconst getDebug = (tileCount: number, columns: number, tileWidth: number, tileHeight: number, blockedTiles: number[][]) => {\n  const elements = [];\n  for (let i = 0 ; i < tileCount ; i++) {\n    const location = [(i % columns),  Math.floor(i / columns)];\n    const x = location[0] * tileWidth;\n    const y = location[1] * tileHeight;\n    var style = {\n      fontSize: 12,\n      align: 'center',\n      fill : '0x0',\n      strokeThickness : 1,\n      wordWrap : true,\n      wordWrapWidth : 440\n    };\n    // tile index\n    // elements.push(<Text key={`${x},${y}`} style={style} text={`${i}`} x={x} y={y}/>);\n\n    // tile location\n    elements.push(<Text key={`${x},${y}`} style={style} text={`[${location[0]},${location[1]}]`} x={x} y={y}/>);\n\n    // // blocked\n    elements.push(<Graphics\n      key={`blocked_${x},${y}`}\n      x={x} y={y}\n      draw={graphics => {\n        const line = 1;\n        const blocked = blockedTiles.some((loc) => loc[0] === location[0] && loc[1] === location[1]);\n        const color = blocked ? 0xFF3300 : 0x00FF00;\n        graphics.lineStyle(line, color);\n        graphics.drawRect(line / 2, line / 2, tileWidth - line / 2, tileHeight - line / 2);\n        graphics.endFill();\n      }}\n    />)\n  }\n  return elements;\n}\n\nconst getTileset = (mapData: TiledMapData) => {\n  if (!mapData.tilesets.length) {\n    throw new Error(\"No tilesets found! Can't continue\");\n  }\n  if (mapData.tilesets.length > 1) {\n    console.warn(\"Found more than one tileset. But we currently only support one.\");\n  }\n  if (mapData.tilesets[0].source) {\n    throw new Error(\"Please embed tilemaps in Tiled! Can't continue\");\n  }\n  return mapData.tilesets[0];\n}\n\nconst createTileLayer = (layer: TiledLayerData, texture: PIXI.Texture, horizontalTiles: number, tileset: TiledTilesetData, spritesheet: PIXI.Spritesheet) => {\n  return (\n    <RectTileLayer\n      key={layer.name}\n      texture={texture} \n      layer={layer} \n      horizontalTiles={horizontalTiles}\n      tileset={tileset}\n      spritesheet={spritesheet}\n    />\n  );\n}\n\nconst parseSpritesheetData = (mapData: TiledMapData): SpritesheetData => {\n  const tileset = getTileset(mapData);\n  const columns = tileset.columns;\n\n  const frames: { [name: string]: SpriteData } = {};\n  for (let i = 0; i < tileset.tilecount; i++) {\n    const w = tileset.tilewidth;\n    const h = tileset.tileheight;\n    const x = (i % columns) * w;\n    const y = Math.floor(i / columns) * h;\n\n    frames[`${tileset.name}-${i + 1}`] = { \n      frame: {x, y, w, h},\n      spriteSourceSize: {x, y, w, h},\n      rotated: false,\n      trimmed: false,\n      sourceSize: { w, h}\n    };\n  }\n  const image = tileset.image;\n  const size = { w: tileset.imagewidth, h: tileset.imageheight };\n  return {\n    frames,\n    meta: {\n      image,\n      size,\n      scale: 1\n    }\n  };\n}\n\n/** Add tiles in this layer to list */\nconst addAllTilesInLayerToList = (list: [number, number][], layer: TiledLayerData, columns: number) => {\n  layer.data.reduce((acc: [number, number][], tile, index) => {\n    if (tile > 0) {\n      const x = (index % columns);\n      const y = Math.floor(index / columns);\n      acc.push([x, y]);  \n    }\n    return acc;\n  }, list);\n}","\nexport enum GameState {\n  placingBoxes,\n  pickingBoxes,\n  complete,\n}\n\nexport type GameStateAction =\n | { type: 'startPicking' }\n | { type: 'completeGame' }\n | { type: 'restart' };\n\nexport const gameStateReducer = (state: GameState, action: GameStateAction ) => {\n  switch (action.type) {\n    case 'startPicking':\n      return GameState.pickingBoxes;\n    case 'completeGame':\n      return GameState.complete;\n    case 'restart':\n      return GameState.placingBoxes;\n    default:\n      return state;\n  }\n}","\nexport interface PickingList {\n  products: string[];\n  pickedProducts?: string[]; // when a product from `product` is picked it appears in this list\n  guy?: number;               // who is currently picking this list\n  complete?: boolean;        // when list is completely picked and the picker has returnwed with all the items \n  // clientName? \n  orderNo: string;\n}\n\nexport const generateInitialPickingLists = (): PickingList[] => {\n  // the actual products are not random, but the rest of the data is\n  const productPickingList = [\n    [\"MIC 099\", \"MWO 901\", \"DSC 743\"],\n    [\"WSH 322\"],\n    [\"SMX 041\", \"OTV 482\", \"CAM 679\"],\n    [\"SMK 019\", \"BAT 917\"],\n    [\"VAC 082\"],\n    [\"SPK 876\", \"PTV 555\", \"DLA 413\"],\n    [\"IRN 590\"],\n    [\"BAM 223\"],\n    [\"DSC 743\", \"MIC 099\"],\n    [\"DLA 413\"],\n    [\"DLA 413\"],\n    [\"SMK 019\", \"BAT 917\", \"RFG 411\"],\n    [\"IRN 590\"],\n    [\"DLA 413\", \"VAC 082\"],\n    [\"PTV 555\", \"SPK 876\"],\n    [\"SMK 019\", \"BAT 917\"],\n    [\"VIR 555\"],\n    [\"CAM 679\", \"IRN 590\"],\n    [\"BAM 223\"],\n    [\"IRN 590\"],\n    [\"BAM 223\", \"VAC 082\"],\n    [\"SMK 019\", \"BAT 917\"],\n    [\"VIR 555\"],\n    [\"VIR 555\"],\n    [\"CAM 679\", \"BAM 223\"],\n    [\"SPK 876\", \"PTV 555\"]\n  ];\n\n  return productPickingList.map(products => {\n    return {\n      orderNo: Math.random().toString().slice(2, 9),\n      products\n    } \n  });\n}\n\nexport type PickingListsAction =\n | { type: 'startPicking', guy: number, orderNo: string }\n | { type: 'completeProductPick', productCode: string, orderNo: string }\n | { type: 'completeOrder', orderNo: string }\n | { type: 'restart' };\n\n \nexport const pickingListsReducer = (state: PickingList[], action: PickingListsAction ) => {\n  switch (action.type) {\n    case 'startPicking':\n      return state.map(pL => {\n        if (pL.orderNo === action.orderNo) {\n          return { \n            ...pL,\n            guy: action.guy\n          }\n        }\n        return pL;\n      })\n    case 'completeProductPick':\n      return state.map(pL => {\n        if (pL.orderNo === action.orderNo) {\n          return { \n            ...pL,\n            pickedProducts: [ \n              ...pL.pickedProducts || [], \n              action.productCode\n            ]\n          }\n        }\n        return pL;\n      })\n    case 'completeOrder':\n      return state.map(pL => {\n        if (pL.orderNo === action.orderNo) {\n          return { \n            ...pL,\n            complete: true\n          }\n        }\n        return pL;\n      });\n    case 'restart':\n      return state.map(pL => ({\n        ...pL,\n        guy: undefined,\n        complete: false,\n        pickedProducts: []\n      }));\n    default:\n      return state;\n  }\n}","import { initialWMSState } from \"./wmsReducer\";\n\nexport interface BoxState {\n  location: [number, number];\n  inRack?: boolean; // true if in a rack, false if in a dock\n}\n\nexport interface WarehouseState {\n  boxes: { [id: string]: BoxState }\n}\n\nconst generateBoxLocationsAtDock = () => {\n  const products = initialWMSState.map(p => p.productCode);\n  products.sort(() => (0.5 - Math.random()));\n  return products.reduce((acc: { [id: string]: BoxState }, value: string, index: number) => {\n    acc[value] = { \n      location: [1 + index, 1]\n    }\n    return acc;\n  }, {});\n}\n\n// Use this for debugging. It shows a warehouse where all the boxes are placed\nconst generateBoxLocationsAtRacks = () => {\n  const products = initialWMSState.map(p => p.productCode);\n  products.sort(() => (0.5 - Math.random()));\n  const rackLocations: [number, number][] = [\n    [3, 9],\n    [4, 9],\n    [5, 9],\n    [7, 9],\n    [8, 9],\n    [9, 9],\n    [11, 9],\n    [12, 9],\n    [13, 9],\n    [15, 9],\n    [16, 9],\n    [17, 9],\n    [3, 6],\n    [4, 6],\n    [5, 6],\n    [7, 6],\n    [8, 6],\n    [9, 6],\n    [11, 6],\n    [12, 6],\n    [13, 6],\n    [15, 9],\n  ];\n\n  return products.reduce((acc: { [id: string]: BoxState }, value: string, index: number) => {\n    acc[value] = { \n      location: rackLocations[index],\n      inRack: true\n    }\n    return acc;\n  }, {});\n}\n\nconst generateBadBoxLocations = (): { [id: string]: BoxState } => {\n  const inRack = true;\n  return {\n    \"CST 964\": { location: [9, 9], inRack },\n    \"TPH 255\": { location: [8, 9], inRack },\n    \"DSC 743\": { location: [7, 9], inRack },\n    \"SMX 041\": { location: [5, 9], inRack },\n    \"RFG 411\": { location: [4, 9], inRack },\n    \"WSH 322\": { location: [11, 9], inRack },\n    \"MIC 099\": { location: [12, 9], inRack },\n    \"OTV 482\": { location: [13, 9], inRack },\n    \"MWO 901\": { location: [15, 9], inRack },\n    \"SPK 876\": { location: [16, 9], inRack },\n    \"PTV 555\": { location: [4, 6], inRack },\n    \"VIR 555\": { location: [5, 6], inRack },\n    \"BAT 917\": { location: [7, 6], inRack },\n    \"VAC 082\": { location: [8, 6], inRack },\n    \"DLA 413\": { location: [9, 6], inRack },\n    \"SMK 019\": { location: [11, 6], inRack },\n    \"BAM 223\": { location: [12, 6], inRack },\n    \"CAM 679\": { location: [13, 6], inRack },\n    \"IRN 590\": { location: [15, 6], inRack },\n  };\n}\nconst generateGoodBoxLocations = (): { [id: string]: BoxState } => {\n  const inRack = true;\n  return {\n    \"IRN 590\": { location: [9, 9], inRack },\n    \"CAM 679\": { location: [8, 9], inRack },\n    \"BAM 223\": { location: [7, 9], inRack },\n    \"SMK 019\": { location: [5, 9], inRack },\n    \"BAT 917\": { location: [4, 9], inRack },\n    \"DLA 413\": { location: [11, 9], inRack },\n    \"VAC 082\": { location: [12, 9], inRack },\n    \"VIR 555\": { location: [13, 9], inRack },\n    \"PTV 555\": { location: [15, 9], inRack },\n    \"SPK 876\": { location: [16, 9], inRack },\n    \"MWO 901\": { location: [4, 6], inRack },\n    \"OTV 482\": { location: [5, 6], inRack },\n    \"MIC 099\": { location: [7, 6], inRack },\n    \"DSC 743\": { location: [8, 6], inRack },\n    \"WSH 322\": { location: [9, 6], inRack },\n    \"RFG 411\": { location: [11, 6], inRack },\n    \"TPH 255\": { location: [12, 6], inRack },\n    \"CST 964\": { location: [13, 6], inRack },\n    \"SMX 041\": { location: [15, 6], inRack },\n  };\n}\n\nexport const initialWarehouseState: WarehouseState = {\n  boxes: generateBoxLocationsAtDock()\n  // boxes: generateBoxLocationsAtRacks()\n  // boxes: generateBadBoxLocations()\n  // boxes: generateGoodBoxLocations()\n}\n\n\nexport type WarehouseAction =\n | { type: 'placeBox'; productCode: string, location: [number, number], inRack: boolean }\n | { type: 'restart' };\n\nexport const warehouseReducer = (state: WarehouseState, action: WarehouseAction) => {\n  switch (action.type) {\n    case 'placeBox':\n      const { location, inRack } = action; \n      const boxes = { \n        ...state.boxes,\n        [action.productCode]: {\n            ...state.boxes[action.productCode],\n            location,\n            inRack\n        }\n      }\n      return { \n        ...state,\n        boxes\n      } ;\n    case 'restart':\n      return initialWarehouseState;  \n    default: {\n        return state;\n    }\n  }\n}\n\n","import { initialWMSState, WMSData } from \"reducers/wmsReducer\";\nimport { generateInitialPickingLists, PickingList } from \"reducers/pickingListsReducer\";\nimport { initialWarehouseState, WarehouseState } from \"reducers/warehouseReducer\";\nimport { GameState } from \"reducers/gameStateReducer\";\n\nexport interface AppState {\n  statusText: string;\n  gameState: GameState,\n  wms: WMSData[];\n  pickingLists: PickingList[];\n  warehouse: WarehouseState; // Where all the boxes are in the warehouse\n  muted: boolean;\n  time: number;\n}\n\n\nexport const initialState: AppState = {\n  statusText: \"\",\n  gameState: GameState.placingBoxes,\n  wms: initialWMSState,\n  pickingLists: generateInitialPickingLists(),\n  warehouse: initialWarehouseState,\n  muted: localStorage.getItem('muted') === 'true',\n  time: 0,\n}\n\n","export type StatusTextAction =\n | { type: 'setStatusText', text: string };\n\n\nexport const statusTextReducer = (state: string, action: StatusTextAction ) => {\n  switch (action.type) {\n    case 'setStatusText':\n      return action.text;\n    default:\n      return state;\n  }\n}","export type MutedReducerAction =\n | { type: 'setMuted', value: boolean };\n\n\nexport const mutedReducer = (state: boolean, action: MutedReducerAction ) => {\n  switch (action.type) {\n    case 'setMuted':\n      localStorage.setItem('muted', action.value ? 'true' : 'false');\n      return action.value;\n    default:\n      return state;\n  }\n}","export type TimeReducerAction =\n | { type: 'tick', start: number };\n\n\nexport const timeReducer = (state: number, action: TimeReducerAction ) => {\n  switch (action.type) {\n    case 'tick':\n      return (performance.now() - action.start);\n    default:\n      return state;\n  }\n}","import React, { createContext, useReducer } from 'react';\nimport { AppState, initialState } from 'appState';\nimport { gameStateReducer, GameStateAction } from 'reducers/gameStateReducer';\nimport { warehouseReducer, WarehouseAction } from 'reducers/warehouseReducer';\nimport { statusTextReducer, StatusTextAction } from 'reducers/statusTextReducer';\nimport { PickingListsAction, pickingListsReducer } from 'reducers/pickingListsReducer';\nimport { mutedReducer, MutedReducerAction } from 'reducers/mutedReducer';\nimport { TimeReducerAction, timeReducer } from 'reducers/timeReducer';\n\n\nconst AppContext = createContext<{\n  state: AppState;\n  dispatch: React.Dispatch<AnyAction>;\n}>({\n  state: initialState,\n  dispatch: () => null\n});\n\n\nexport type AnyAction = GameStateAction\n | WarehouseAction\n | StatusTextAction\n | PickingListsAction \n | MutedReducerAction\n | TimeReducerAction;\n\nconst reducer = (state: AppState, action: AnyAction) => {\n  return {\n    gameState: gameStateReducer(state.gameState, action as GameStateAction),\n    statusText: statusTextReducer(state.statusText, action as StatusTextAction),\n    wms: state.wms, // read only\n    pickingLists: pickingListsReducer(state.pickingLists, action as PickingListsAction), \n    warehouse: warehouseReducer(state.warehouse, action as WarehouseAction),\n    muted: mutedReducer(state.muted, action as MutedReducerAction), // todo: settingsreducer?\n    time: timeReducer(state.time, action as TimeReducerAction)\n  };\n};\n\nconst AppProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <AppContext.Provider value={{state, dispatch}}>\n      {children}\n    </AppContext.Provider>\n  )\n}\n\nexport { AppContext, AppProvider };","import React, { useRef,  useMemo } from 'react';\nimport { Sprite, Graphics, Container } from '@inlet/react-pixi';\nimport * as PIXI from 'pixi.js';\nimport { PixiPlugin } from 'gsap/all';\nimport { gsap } from 'gsap'\n\nPixiPlugin.registerPIXI(PIXI);\ngsap.registerPlugin(PixiPlugin);\n\ninterface Props {\n  position?: PIXI.Point;\n  location?: [number, number];\n  tileWidth: number;\n  tileHeight: number;\n  selected: boolean;\n  behindWall?: boolean;\n  onClick?: (event: PIXI.interaction.InteractionEvent) => void;\n  onDragged?: (event: PIXI.interaction.InteractionEvent) => void;\n  onReleased?: (event: PIXI.interaction.InteractionEvent) => void;\n  delay?: number; // Wait this long before showing\n}\n\n\nconst Box = (props: Props & React.ComponentProps<typeof Container>) => {\n  const {\n    location = [0, 0],\n    tileWidth = 0, \n    tileHeight = 0,\n    behindWall,\n    selected\n  } = props;\n  const ref = useRef<PIXI.Container>(null);\n  const imgRef = useRef<PIXI.Sprite>(null);\n  const dragRef = useRef<PIXI.Sprite>(null);\n  const offset = useRef<PIXI.Point>();\n  const data = useRef<PIXI.interaction.InteractionData>();\n\n  const {x, y} = useMemo(() => {\n    return { \n      x: location[0] * tileWidth,\n      y: location[1] * tileHeight,\n    };\n  }, [location, tileWidth, tileHeight]);\n  \n  const onDragStart = (event: PIXI.interaction.InteractionEvent) => {\n    data.current = event.data;\n    event.currentTarget.zIndex = 4;\n    event.stopPropagation(); \n    if (props.onClick) props.onClick(event);\n\n    offset.current = data.current.getLocalPosition(ref.current!);\n\n    imgRef.current!.visible = false;\n    dragRef.current!.visible = true;\n  }\n  \n  const onDragEnd = (event: PIXI.interaction.InteractionEvent) => {\n    if (props.behindWall) {\n      event.currentTarget.zIndex = 3;\n    } else {\n      event.currentTarget.zIndex = 1;\n    }\n    data.current = undefined;\n\n    if (props.onReleased) props.onReleased(event);\n    imgRef.current!.visible = true;\n    dragRef.current!.visible = false;\n\n  }\n  \n  const onDragMove = (event: PIXI.interaction.InteractionEvent) => {\n    if (data.current && ref.current){\n      const parentPos = data.current.getLocalPosition(ref.current!.parent);\n      const position = new PIXI.Point(parentPos.x - offset.current!.x, parentPos.y - offset.current!.y);\n\n      ref.current!.position = position;\n      if (props.onDragged) props.onDragged(event);\n    }\n  }\n\n  const img = `${process.env.PUBLIC_URL}/images/box1${ props.behindWall ? 'b' : ''}.png`;\n\n  return (\n    <Container\n      { ...props }\n      x={x}\n      y={y}\n      ref={ref}\n      zIndex={(props.behindWall) ? 3 : 1} // boxes in front: 1, guy: 2, boxes in back: 3\n      mousedown={onDragStart}\n      touchstart={onDragStart}\n      mouseup={onDragEnd}\n      mouseupoutside={onDragEnd}\n      mousemove={onDragMove}\n      touchmove={onDragMove}\n    >\n      {selected && (\n        <Graphics draw={(graphics:PIXI.Graphics) => {\n            const line = 2;\n            const color = 0xffcc00;\n            // const color = 0xbada55;\n            graphics.clear();\n            graphics.lineStyle(line, color);\n            if (behindWall) {\n              graphics.drawRect(2, tileHeight / 2 - 1, tileWidth - 4, tileHeight / 2 + 2 );\n            }\n            else {\n              graphics.drawRect(2, -tileHeight / 2 - 1, tileWidth - 4, tileHeight + 2 );\n            }\n            graphics.endFill();\n          }}\n        />\n      )}\n      <Sprite \n        anchor={behindWall ? [0, -0.5] : [0, 0.5]}\n        image={img}\n        ref={imgRef}\n      />        \n      <Sprite \n        name=\"ghost\"\n        anchor={behindWall ? [0, -0.5] : [0, 0.5]}\n        alpha={0.9}\n        image={`${process.env.PUBLIC_URL}/images/box1.png`}\n        ref={dragRef}\n        visible={false}\n      />        \n    </Container>\n  );\n}\n\nexport default Box;\n\n","import React, { useState, useEffect, forwardRef, useRef } from 'react';\nimport { useApp, useTick, Container, Text } from \"@inlet/react-pixi\";\nimport * as PIXI from 'pixi.js';\nimport SpriteAnimated from './SpriteAnimated';\n\nexport enum Orientation {\n  front = 'front',\n  left = 'left',\n  right = 'right',\n  back = 'back',\n}\n\ninterface Props {\n  atlas: string;\n  carryBox: boolean;\n}\n\nconst DEBUG = false;\n//\nconst Guy = forwardRef<PIXI.Container, any>((props: Props & React.ComponentProps<typeof Container>, ref) => {\n  const {\n    atlas,\n    carryBox,\n    ...containerProps\n  } = props;\n\n  const [frames, setFrames] = useState<{ [key: string]: PIXI.Texture[]}|null>(null);\n\n  const [orientation, setOrientation] = useState<Orientation>(Orientation.right);\n  const app = useApp();\n  const lastPositionPoint = useRef<PIXI.Point>();\n\n  useTick(() => {\n    if (!ref || !(ref as any).current) return;\n    const currentPosition = (ref as any).current.position as PIXI.Point;\n    const lastPosition = lastPositionPoint.current;\n    if (lastPosition && !lastPosition.equals(currentPosition)) {\n      const angle: number = Math.atan2(currentPosition.y - lastPosition.y, currentPosition.x - lastPosition.x);\n      if ((angle >= Math.PI / -4 && angle <= 0) || (angle >= 0 && angle <= Math.PI / 4)) {\n        // going right\n        setOrientation(Orientation.right);     \n      }\n      else if (angle >= Math.PI / 4 && angle <= Math.PI * .75) {\n        // going down\n        setOrientation(Orientation.front);\n      }\n      else if (angle > Math.PI * .75 || angle < Math.PI * -0.75){\n        // going left\n        setOrientation(Orientation.left);\n      } else {\n        // Going up\n        setOrientation(Orientation.back);\n      }\n    }\n    lastPositionPoint.current = currentPosition.clone();\n  });\n\n  useEffect(() => {\n    const loadingComplete = () => {\n      const allFrames = app.loader.resources[atlas].data.frames;\n      const indexedTextures = Object.keys(allFrames).reduce((acc: any, frame: string) => {\n        // frames are in the format of: 'front1', 'front2', 'left-box1' etc\n        // create a mapping keyed by the part without the number\n        const animation = frame.substring(0, frame.length - 1);\n        if (!acc[animation]) {\n          acc[animation] = [];\n        }\n        acc[animation].push(PIXI.Texture.from(frame));\n        return acc;\n      }, {});\n\n      setFrames(indexedTextures);\n    }\n\n    app.loader.onComplete.once(loadingComplete);\n    if (!app.loader.loading) {\n      app.loader.add(atlas).load();\n    }\n    \n  }, [app.loader, app.loader.loading, atlas, props.name]);\n\n  if (!frames) return null;\n  const animationFrames = frames[`${orientation}${carryBox ? '-box': ''}`];\n\n  return (\n    <Container \n      ref={ref}\n      zIndex={2}\n      { ...containerProps}\n    >\n      <SpriteAnimated\n        animationSpeed={0.15}\n        isPlaying={true}\n        textures={animationFrames}\n        anchor={[0, 0.1]}\n      />\n      { DEBUG && (<Text style={{\n        fontSize: 12,\n        align: 'center',\n        fill: '0xfff',\n        strokeThickness: 1,\n        wordWrap : true,\n        wordWrapWidth : 440\n      }}\n      text={`${props.name}`} />\n      )}\n    </Container>\n  )\n});\n\n// const areEqual = (a: React.ComponentProps<typeof Container>, b: React.ComponentProps<typeof Container>) => {\n//   return true;\n// }\n// export default memo(Guy, () => (true));\nexport default Guy;\n","import { PixiComponent, applyDefaultProps, AnimatedSprite } from '@inlet/react-pixi';\nimport * as PIXI from 'pixi.js';\n\nexport default PixiComponent<React.ComponentProps<typeof AnimatedSprite>, PIXI.AnimatedSprite>('SpriteAnimated', {\n  create: ({ textures }) => {\n    const animatedSprite = new PIXI.AnimatedSprite(textures || [], true);\n    return animatedSprite;\n  },\n  applyProps: (instance, oldProps, newProps) => {\n    applyDefaultProps(instance, oldProps, newProps);\n    instance.gotoAndPlay(0);\n  },\n});\n\n\n","import React, { useState, useEffect, useRef } from 'react';\nimport * as PIXI from 'pixi.js';\nimport Guy from './Guy';\nimport { AnyAction } from 'components/context/AppProvider';\nimport { AStarFinder } from 'astar-typescript';\nimport { PickingList } from 'reducers/pickingListsReducer';\nimport { gsap, Linear } from 'gsap'\nimport { PixiPlugin } from 'gsap/all';\nimport { SPEED_MULTIPLIER } from 'constants/gameSettings';\n\nPixiPlugin.registerPIXI(PIXI);\ngsap.registerPlugin(PixiPlugin);\n\ninterface Props {\n  pickingList?: PickingList;\n  homeLocation: [number, number];\n  dispatch: React.Dispatch<AnyAction>;\n  aStar: AStarFinder;\n  getProductLocation: (productCode: string) => { location: [number, number], far: boolean }\n}\n\nconst convertLocation = (location: [number, number]) => {\n  // This is the format AStarFind works with\n  return { x: location[0], y: location[1] }\n}\n//\nconst WarehouseGuy = (props: Props & React.ComponentProps<typeof Guy>) => {\n  const {\n    dispatch,\n    pickingList,\n    aStar,\n    homeLocation,\n    tileSize,\n    getProductLocation,\n    ...guyProps\n  } = props;\n\n  const guyRef = useRef(null);\n  const [carryBox, setCarryBox] = useState<boolean>(false);\n\n  const lastLocation = useRef<[number, number]>(homeLocation); // aStar has to know where this guy starts from\n  const currentDestination = useRef<string>();\n  \n  useEffect(() => {\n    if (!guyRef.current || !pickingList) return;\n\n\n    const { orderNo } = pickingList;\n    \n    //console.log(`[${props.name}] picking list: `, pickingList.products.find(value => !pickedProducts.includes(value)) )\n   \n    const productCode = pickingList.products.find(value => !(pickingList.pickedProducts || []).includes(value));\n    const destination = (productCode || 'home');\n    if (currentDestination.current && (currentDestination.current === destination)) {\n      //console.log(`[${props.name}] was already underway to ${productCode} ${currentDestination.current}`)\n      // todo: this is to prevent the guy from starting another animation when another guy picks up a boxes\n      // Would be better to useMemo or something but cba now\n      return;\n    }\n    currentDestination.current = productCode || destination;\n\n    gsap.killTweensOf(guyRef.current);\n    const tl = gsap.timeline();\n    const pathStartLocation = convertLocation(lastLocation.current || homeLocation);\n\n    if (productCode) {\n      // There is a product to pick, go fetch it\n      \n      // Determine the path to this product\n      const {location, far} = getProductLocation(productCode);\n      // console.log(`[${props.name}] We need to pick ${productCode} (${orderNo}). It's location is ${location}. It's${far ? \"\" : \" not\"} far. We start at ${pathStartLocation.x}, ${pathStartLocation.y}}`);\n\n      const path = aStar?.findPath(pathStartLocation, convertLocation(location)) || [];\n      // create animation to walk this path\n      path.forEach((loc: number[]) => {\n        tl.to(guyRef.current, {\n          ease: Linear.easeNone,\n          pixi: { \n            x: loc[0] * tileSize,\n            y: loc[1] * tileSize\n          }, \n          duration: 1 / SPEED_MULTIPLIER + (far ? .035 : 0)  // it takes one second real time to walk one tile\n        });\n      }); \n      tl.to(guyRef.current, {\n        delay: far ? .2 : 0, // We cheat a bit to make the difference bigger. Taking a box from a 'far' location takes half a second longer\n        onComplete: () => { \n          // completed picking product\n          setCarryBox(true);\n          dispatch({ type: 'completeProductPick', productCode, orderNo});\n          //console.log(`[${props.name}] completed picking ${productCode} (${orderNo})`)\n          const endLocation = path[path.length - 1];\n          lastLocation.current = endLocation as [number, number];\n        },\n      })\n    } \n    else {\n      // All done with this order, return home\n      //console.log(`[${props.name}] I guess we are done. Time to return to ${homeLocation}`);\n        \n      // Determine the path home\n      const path = aStar?.findPath(pathStartLocation, convertLocation(homeLocation)) || [];\n      \n      // create animation to walk this path\n      path.forEach((loc: number[]) => {\n        tl.to(guyRef.current, {\n          ease: Linear.easeNone,\n          pixi: { \n            x: loc[0] * tileSize,\n            y: loc[1] * tileSize\n          }, \n          duration: 1 / SPEED_MULTIPLIER\n        });\n      }); \n      tl.to(guyRef.current, {\n        onComplete: () => { \n          // completed picking product\n          setCarryBox(false);\n          lastLocation.current = homeLocation;\n          dispatch({ type: 'completeOrder', orderNo });\n        },\n      })\n    }    \n  }, [aStar, dispatch, getProductLocation, homeLocation, pickingList, tileSize, props.name]);\n  \n  return (\n    <Guy\n      atlas={`${process.env.PUBLIC_URL}/images/sprites/guy/guy.json`} \n      x={homeLocation[0] * tileSize} \n      y={homeLocation[1] * tileSize}\n      carryBox={carryBox}\n      {...guyProps} \n      ref={guyRef} \n    />\n  )\n};\n\n// const areEqual = (a: React.ComponentProps<typeof Container>, b: React.ComponentProps<typeof Container>) => {\n//   return true;\n// }\n// export default memo(Guy, () => (true));\nexport default WarehouseGuy;\n","export const SPEED_MULTIPLIER = 28;","import React, { useEffect, useState, useRef, useCallback, useContext, useMemo } from \"react\";\nimport { Container, Stage } from '@inlet/react-pixi';\nimport { AStarFinder } from \"astar-typescript\";\nimport { TiledMapData } from 'constants/tiledMapData';\nimport Tilemap from './Tilemap';\nimport BridgedStage from \"./pixi/util/BridgedStage\";\nimport { AppContext } from \"./context/AppProvider\";\nimport * as PIXI from 'pixi.js';\nimport Box from \"./pixi/Box\";\nimport { PixiPlugin } from 'gsap/all';\nimport { gsap } from 'gsap'\nimport { GameState } from \"reducers/gameStateReducer\";\nimport WarehouseGuy from \"./pixi/WarehouseGuy\";\nimport sound from 'pixi-sound';\nimport { PickingList } from \"reducers/pickingListsReducer\";\n\nPixiPlugin.registerPIXI(PIXI);\ngsap.registerPlugin(PixiPlugin);\n\nwindow.PIXI = PIXI;\n// eslint-disable-next-line import/first\nimport 'pixi-tilemap'; // tilemap is not a real npm module :/\n\nexport interface Props {\n  tilemap: string;\n  width: number;\n  height: number;\n  onProductClick: (productCode: string) => void;\n}\n\nconst Scene = (props: Props & React.ComponentProps<typeof Container>) => {\n  const {tilemap, width, height, ...restProps} = props;\n  const {state, dispatch} = useContext(AppContext);\n  const {warehouse} = state;\n\n  const [mapData, setMapData] = useState<TiledMapData>();\n  const [rackLocations, setRackLocations] = useState<[number, number][]>([]);\n  const [rackFarLocations, setRackFarLocations] = useState<[number, number][]>([]); // the racks that are considered 'far'\n  const [dockLocations, setDockLocations] = useState<[number, number][]>([]);\n  const [wallLocations, setWallLocations] = useState<[number, number][]>([]);\n  const [selectedBox, setSelectedBox] = useState<string>();\n  const ref = useRef<PIXI.Container>(null);\n\n  const jsonPath = `${process.env.PUBLIC_URL}/${tilemap}`;\n\n  useEffect(() => {\n    new PIXI.Loader().add(jsonPath).load((loader)=>{         \n      const mapData: TiledMapData = loader.resources[jsonPath].data;\n      setMapData(mapData);\n    });\n  }, [jsonPath]);\n\n  const basePath = jsonPath.substr(0, jsonPath.lastIndexOf('/'));\n\n  useEffect(() => {\n    sound.add('snap', `${process.env.PUBLIC_URL}/sound/snap.wav`);    \n    sound.add('whoosh', `${process.env.PUBLIC_URL}/sound/whoosh.mp3`);    \n    sound.add('bennyHill', `${process.env.PUBLIC_URL}/sound/BennyHill.mp3`);    \n  }, []);\n\n  useEffect(() => {\n    if (state.gameState === GameState.pickingBoxes && !state.muted) {\n      sound.play('bennyHill'); \n    } else {\n      sound.stop('bennyHill');\n    }\n  }, [state.gameState, state.muted])\n\n  /** Returns the location of the rack at given location \n   *  The tile south of a rack counts too. When no rack is found\n   * returns undefined */\n  const getRackAtLocation = useCallback((location: [number, number]) => {\n    // Racks are two tiles high but the box is placed at the top tile\n    return rackLocations.find((l) => (l[0] === location[0] && l[1] === location[1]))\n  }, [rackLocations]);\n\n  const getDockAtLocation = useCallback((location: [number, number]) => {\n    return dockLocations.find((l) => (l[0] === location[0] && l[1] === location[1]))\n  }, [dockLocations]);\n\n  const getProductLocation = (productCode: string): { location: [number, number], far: boolean } => {\n    const {location} = state.warehouse.boxes[productCode];\n    const far = !!rackFarLocations.find((l) => (l[0] === location[0] && l[1] === location[1]));\n    // Some products are considered 'far', it takes longer to pick those\n    return {\n      location,\n      far\n    };\n  };\n  \n  // Converts pixel coordinate to scene location\n  const pointToSceneLocation = useCallback((point: PIXI.Point): [number, number] => {\n    if (!mapData?.tilewidth || !mapData.tileheight) {\n      return [0, 0];\n    }\n    return [Math.floor(point.x / mapData?.tilewidth), Math.floor(point.y / mapData?.tileheight)];\n  }, [mapData]);\n  \n  const getBoxNameAtLocation = (location: [number, number]) => {\n    const entry = Object.entries(warehouse.boxes)\n      .find(([name, box]) => box.location[0] === location[0] && box.location[1] === location[1]);\n    if (entry) return entry[0];\n  }\n\n  const handleClick = (productCode: string, event: PIXI.interaction.InteractionEvent) => {\n    props.onProductClick(productCode);\n\n    setSelectedBox(productCode);\n  }\n\n\n  const handleDragged = (productCode: string, event: PIXI.interaction.InteractionEvent) => {\n    const position = event.data.global;\n    const location = pointToSceneLocation(position); // tile location\n\n    const rackLocation = getRackAtLocation(location) || getDockAtLocation(location);\n\n    let tint = 0xFFFFFF;\n    if (rackLocation) {\n      const otherBoxName = getBoxNameAtLocation(rackLocation);\n      if (!otherBoxName || otherBoxName === productCode) {\n        tint = 0x00FF30; // Can drop here\n      } else {\n        tint = 0xFF3300; // Can't drop on another box\n      }\n    }\n    setTint(event.currentTarget, tint);\n  }\n\n  const handleBoxDragEnd = (productCode: string, event: PIXI.interaction.InteractionEvent) => {\n    const position = event.data.global;\n    const location = pointToSceneLocation(position); // tile location\n\n    setTint(event.currentTarget, 0xFFFFFF);\n\n    const rackLocation = getRackAtLocation(location);\n    const dockLocation = getDockAtLocation(location);\n    const rackOrDockLoc = rackLocation || dockLocation;\n    if (rackOrDockLoc) {\n      const otherBoxName = getBoxNameAtLocation(rackOrDockLoc);\n      if (!otherBoxName || otherBoxName === productCode) {\n        const inRack = !!rackLocation;\n        if (otherBoxName !== productCode && !state.muted) sound.play('snap'); \n        dispatch({ type: 'placeBox', productCode, location: rackOrDockLoc!, inRack});\n        return;\n      }\n    }\n\n    // Couldn't place, fly back to origin\n    const box = warehouse.boxes[productCode];\n    const originX = box.location[0] * mapData!.tilewidth;\n    const originY = box.location[1] * mapData!.tileheight;\n\n    if (!state.muted) sound.play('whoosh'); \n    gsap.to(event.currentTarget, { \n      duration: .5,\n      ease: \"bounce.out\",\n      pixi: {\n        x: originX,\n        y: originY\n      }\n    });\n  }\n\n  const renderBoxes = () => {\n    if (!mapData || !wallLocations.length) return null;\n    \n    return Object.entries(warehouse.boxes).map(([name, box]) => (\n      <Box \n        location={box.location} \n        tileWidth={mapData.tilewidth} \n        tileHeight={mapData.tileheight}\n        selected={name === selectedBox}\n        onClick={(event) => handleClick(name, event)}\n        onDragged={(event) => handleDragged(name, event)}\n        onReleased={(event) => handleBoxDragEnd(name, event)}\n        key={name}\n        behindWall={isNorthOfWall(box.location, wallLocations)}\n        interactive={state.gameState === GameState.placingBoxes}\n      />\n    ));\n  }\n\n  /** Returns true if the tile is blocked */\n  const locationIsBlocked = useCallback((location: [number, number]) => {\n    return wallLocations.some((l) => l[0] === location[0] && l[1] === location[1]);\n  }, [wallLocations]);\n\n  const aStar = useMemo(() => {\n    if (!mapData || !wallLocations.length) {\n        return null;\n    }\n    const matrix: number[][] = [];\n    for (let y = 0; y < mapData.height; y++) {\n        const row: number[] = [];\n        for (let x = 0; x < mapData.width; x++) {\n            const location: [number, number] = [x, y];\n            const blocked = locationIsBlocked(location);\n            row.push(blocked ? 1 : 0);\n        }\n        matrix.push(row);\n    }\n    return new AStarFinder({\n      grid: {\n          matrix\n      },\n      diagonalAllowed: false,\n      includeStartNode: false,\n      heuristic: \"Manhatten\",\n      weight: 0,\n    });\n  }, [mapData, locationIsBlocked, wallLocations]);\n\n  const [pickingList1, setPickingList1] = useState<PickingList>();\n  const [pickingList2, setPickingList2] = useState<PickingList>();\n  const [pickingList3, setPickingList3] = useState<PickingList>();\n\n  useEffect(() => {\n    if (state.gameState === GameState.pickingBoxes) {\n      setSelectedBox(undefined);\n\n      const nextPickingList1 = state.pickingLists.find((pL, i) => !pL.complete && i % 3 === 0);\n      setPickingList1(nextPickingList1);\n      const nextPickingList2 = state.pickingLists.find((pL, i) => !pL.complete && i % 3 === 1);\n      setPickingList2(nextPickingList2);\n      const nextPickingList3 = state.pickingLists.find((pL, i) => !pL.complete && i % 3 === 2);\n      setPickingList3(nextPickingList3);\n      if (!nextPickingList1 && !nextPickingList2 && !nextPickingList3) {\n        dispatch({ type: 'completeGame' });\n      }\n    }\n  }, [dispatch, state.gameState, state.pickingLists]);\n  \n\n  const renderGuys = () => {\n    if (!aStar) return null;\n\n    return (\n      <>\n        <WarehouseGuy\n          name={'guy1'}\n          pickingList={pickingList1}  \n          homeLocation={[9, 12]}\n          tileSize={mapData!.tilewidth}\n          getProductLocation={getProductLocation}\n          dispatch={dispatch}\n          aStar={aStar}\n          visible={state.gameState === GameState.pickingBoxes}\n        />\n        <WarehouseGuy\n          name={'guy2'}\n          pickingList={pickingList2}  \n          homeLocation={[10, 12]}\n          tileSize={mapData!.tilewidth}\n          getProductLocation={getProductLocation}\n          dispatch={dispatch}\n          aStar={aStar}\n          visible={state.gameState === GameState.pickingBoxes}\n        />\n        <WarehouseGuy\n          name={'guy3'}\n          pickingList={pickingList3}  \n          homeLocation={[11, 12]}\n          tileSize={mapData!.tilewidth}\n          getProductLocation={getProductLocation}\n          dispatch={dispatch}\n          aStar={aStar}\n          visible={state.gameState === GameState.pickingBoxes}\n        />\n      </> \n    )\n  }\n\n  return (\n    <Stage width={width} height={height}>\n      <Container \n        ref={ref}\n        interactive={true}\n        hitArea={new PIXI.RoundedRectangle(0, 0, width, height, 0)}\n        sortableChildren\n        {...restProps}\n      >\n        { mapData && (\n          <>\n            <Tilemap \n              basePath={basePath} \n              data={mapData} \n              setRackLocations={setRackLocations}\n              setRackFarLocations={setRackFarLocations}\n              setDockLocations={setDockLocations}\n              setWallLocations={setWallLocations}\n            />\n            {renderBoxes()}\n            {renderGuys()}\n          </>\n        )}\n      </Container>\n    </Stage>\n  );\n}\n\nexport default Scene;\n\n// Sets tint on box\nconst setTint = (obj: PIXI.DisplayObject, tint: number) => {\n  const ghost = (obj as PIXI.Container).children.find(c => c.name === 'ghost');\n  if (ghost) {\n    (ghost as PIXI.Sprite).tint = tint; \n  }\n}\n\n// Returns true if the tile south of this one is a wall\nconst isNorthOfWall = (location: [number, number], wallLocations: [number, number][]) => {\n  return wallLocations.some(wL => wL[0] === location[0] && wL[1] === location[1] + 1);\n}\n","import React, { useEffect, useRef, useContext } from \"react\";\nimport { AppContext } from \"components/context/AppProvider\";\nimport { Categories, WMSData } from \"reducers/wmsReducer\";\n\n\ninterface Props {\n  selectedProduct?: string;\n}\n\nconst SKUProfile = (props: Props) => {\n  const tableRef = useRef<HTMLTableElement>(null);\n  const { state } = useContext(AppContext);\n  const data = state.wms;\n\n  useEffect(() => {\n    if (!tableRef.current) return;\n    const table = tableRef.current;\n    \n    // add highlight class \n    const row = table.querySelector(`tr[data-code=\"${props.selectedProduct}\"]`)\n    row?.classList.add(\"highlight\");\n    row?.scrollIntoView({ block: 'end'});\n    return () => {\n    // Remove highlight class from prevously highlighted row\n      table.querySelector(\".highlight\")?.classList.remove(\"highlight\");\n    }\n  }, [props.selectedProduct]);\n\n  const renderContent = () => {\n    return (\n      <table ref={tableRef}>\n        <tbody>\n        <tr><td colSpan={3} className=\"category-header-a\">A. Fast-moving</td></tr>\n        {data.filter(row => row.category === Categories.A).map(row => renderRow(row))}\n        <tr><td colSpan={3} className=\"category-header-b\">B. Medium-moving</td></tr>\n        {data.filter(row => row.category === Categories.B).map(row => renderRow(row))}\n        <tr><td colSpan={3} className=\"category-header-c\">C. Slow-moving</td></tr>\n        {data.filter(row => row.category === Categories.C).map(row => renderRow(row))}\n        <tr><td colSpan={3} className=\"category-header-d\">D. Not-moving</td></tr>\n        {data.filter(row => row.category === Categories.D).map(row => renderRow(row))}\n        </tbody>\n      </table>\n    )\n  }\n\n  const renderRow = (row: WMSData) => {\n    return (\n      <tr key={row.productCode} data-code={row.productCode}>\n        <td>{row.productCode}</td>\n        <td>{row.description}</td>\n        <td>{row.slotting || \"\"}</td>\n      </tr>\n    )\n  }\n  return (\n    <>\n      <h2>SKU velocity profile</h2>\n      {renderContent()}\n    </>\n  )\n}\n\nexport default SKUProfile;","import React, { useContext } from \"react\";\nimport { AppContext } from \"components/context/AppProvider\";\nimport { PickingList } from \"reducers/pickingListsReducer\";\n\nconst PickingLists = () => {\n  const { state } = useContext(AppContext);\n  const data = state.pickingLists;\n  const productNameMap = state.wms.reduce((acc: {[key: string]: string}, value) => {\n    if (!acc[value.productCode]) {\n      acc[value.productCode] = value.description;\n    };\n    return acc;\n  }, {});\n  // useEffect(() => {\n  //   if (!tableRef.current) return;\n  //   const table = tableRef.current;\n    \n  //   // add highlight class \n  //   const row = table.querySelector(`tr[data-code=\"${props.selectedProduct}\"]`)\n  //   row?.classList.add(\"highlight\");\n  //   row?.scrollIntoView({ block: 'end'});\n  //   return () => {\n  //   // Remove highlight class from prevously highlighted row\n  //     table.querySelector(\".highlight\")?.classList.remove(\"highlight\");\n  //   }\n  // }, [props.selectedProduct]);\n\n  const renderContent = () => {\n    return (\n      data.map(pickingList => (\n        <div key={pickingList.orderNo}>\n          {renderPickingList(pickingList)}\n        </div>\n      ))\n    )\n  }\n\n  const renderPickingList = (pList: PickingList) => {\n    return (\n      <table>\n        <tbody>\n          <tr>\n            <td colSpan={3}>Order no: {pList.orderNo}</td>\n          </tr>\n          { pList.products.map(p => renderProduct(pList, p)) }\n        </tbody>\n      </table>\n    )\n  }\n\n  const renderProduct = (pList: PickingList, productCode: string) => {\n    const completed = pList.pickedProducts?.some(p => p === productCode);\n\n    return (\n      <tr key={productCode} className={completed ? \"completed\" : \"\"}>\n        <td></td>\n        <td>{productCode}</td>\n        <td>{productNameMap[productCode]}</td>\n      </tr>\n    )\n  }\n\n  return (\n    <>\n      <h2>Picking lists</h2>\n      {renderContent()}\n    </>\n  )\n}\n\nexport default PickingLists;","import React, { useContext } from 'react';\nimport { AppContext } from 'components/context/AppProvider';\nimport './ipad.css';\nimport SKUProfile from './content/SKUProfile';\nimport PickingLists from './content/PickingLists';\nimport { GameState } from 'reducers/gameStateReducer';\n\ninterface Props {\n  selectedProduct?: string;\n}\n\nconst IPad = (props: Props) => {\n  const { state } = useContext(AppContext);\n  const { gameState } = state;\n\n\n  const renderContent = () => {\n    switch (gameState) {\n      case GameState.placingBoxes:\n        return <SKUProfile selectedProduct={props.selectedProduct} />;\n      case GameState.pickingBoxes:\n        return <PickingLists />;\n    }\n  }\n\n  return (\n    <div className=\"ipad\">\n      <div className=\"content\">\n        {renderContent()}\n      </div>\n    </div>      \n  )\n}\n\nexport default IPad;","import React, { useContext } from \"react\";\nimport { AppContext } from \"components/context/AppProvider\";\nimport './startButton.css';\nimport { GameState } from \"reducers/gameStateReducer\";\n\nconst StartButton = () => {\n  const { state, dispatch } = useContext(AppContext);\n\n  const handleClick = () => {\n    switch (state.gameState) {\n      case GameState.placingBoxes:\n        const allBoxedPlaced = !Object.values(state.warehouse.boxes).some(b => !b.inRack);\n        if(!allBoxedPlaced) {\n          dispatch({ type: 'setStatusText', text: \"First place all goods in the warehouse!\"});\n          return;\n        }\n        dispatch({ type: 'startPicking'});\n    \n        break;\n      case GameState.complete:\n        // eslint-disable-next-line no-restricted-globals\n        location.reload();\n        break;\n    }\n  };\n\n  switch (state.gameState) {\n    case GameState.placingBoxes:\n      return <button onClick={handleClick} className=\"start-button\"><h1>Start</h1></button>;\n    default:\n      return null;\n  }\n}\n\nexport default StartButton;","import React, { useContext, useRef, useEffect, useState } from \"react\";\nimport { AppContext } from \"components/context/AppProvider\";\nimport './statusText.css';\nimport { GameState } from \"reducers/gameStateReducer\";\nimport { SPEED_MULTIPLIER } from \"constants/gameSettings\";\n\nconst StatusText = () => {\n  const { state, dispatch } = useContext(AppContext);\n  const text = state.statusText;\n  const time = state.time;\n\n  useEffect(() => {\n    let timeout: NodeJS.Timeout;\n    const start = performance.now();\n    if (state.gameState === GameState.pickingBoxes) {\n      const update = () => {\n        dispatch({type: 'tick', start})\n      };\n      timeout = setInterval(update, 100);\n    }\n    return () => {\n      clearTimeout(timeout);\n    }\n  }, [dispatch, state.gameState]);\n\n  if (state.gameState === GameState.pickingBoxes) {\n    const maxTime = 45000; // maximum amount of time\n    const progressBarWidth = Math.min(time / maxTime, 1);\n    const progressColor = time > 30000 ? \"#f63a0f\" : \"#86e01e\";\n\n    return (\n      <div className=\"status\">\n        <div className=\"progress\">\n          <div \n            className=\"progress-bar\"\n            style={{\n              width: `${progressBarWidth*100}%`,\n              backgroundColor: progressColor\n            }}\n          ></div>\n          <div className=\"text\">\n            {formatTime(time)}\n          </div>\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"status\">{text}</div>\n  );\n}\n\nexport default StatusText;\n\nexport const formatTime = (ms: number ) => {\n  let seconds = (ms / 1000);\n  var hours = Math.floor( seconds / 3600 ); // 3,600 seconds in 1 hour\n  seconds = seconds % 3600;\n  var minutes = Math.floor( seconds / 60 );\n  seconds = seconds % 60;\n  if (hours > 0) {\n    return `${padLeft(hours)}:${padLeft(minutes)}:${seconds.toFixed(1).padStart(4, '0')}`;\n  } \n  return `${padLeft(minutes)}:${seconds.toFixed(1).padStart(4, '0')}`;\n}\n\nconst padLeft = (input: number) => {\n  return `${input}`.padStart(2, '0');\n}\n\n","import React, { useState, useContext } from \"react\";\nimport './settings.css';\nimport { AppContext } from \"components/context/AppProvider\";\n\nconst Settings = () => {\n  const { state, dispatch } = useContext(AppContext);\n\n  const handleMutedChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch({ type: 'setMuted', value: !e.target.checked})  \n  }\n  return (\n    <div className=\"settings\">\n      <input type=\"checkbox\" onChange={handleMutedChange} checked={state.muted === false} />\n      <label>Sound on</label>\n    </div>\n  )\n}\n\nexport default Settings;","import { useContext } from \"react\";\nimport React from \"react\";\nimport { GameState } from \"reducers/gameStateReducer\";\nimport { AppContext } from \"components/context/AppProvider\";\nimport \"./gameOverScreen.css\"\nimport { formatTime } from \"../StatusText\";\n\nconst GameOverScreen = () => {\n  const { state, dispatch } = useContext(AppContext);\n\n  const handleReset = () => {\n    dispatch({ type: \"restart\" });\n  }\n  if (state.gameState !== GameState.complete) {\n    return null;\n  }\n  return (\n    <div className=\"gameover-screen\">\n      <div className=\"text\">\n        <h1>Game over!</h1>\n        Your time: {formatTime(state.time)}\n        <div className=\"button\">\n          <button onClick={handleReset}>\n            Try again?\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default GameOverScreen;\n","import React, { useState } from 'react';\nimport './App.css';\nimport Scene from 'components/Scene';\nimport * as PIXI  from 'pixi.js';\nimport { Stage } from '@inlet/react-pixi';\nimport IPad from 'components/ui/IPad';\nimport StartButton from 'components/ui/StartButton';\nimport { AppProvider } from 'components/context/AppProvider';\nimport StatusText from 'components/ui/StatusText';\nimport Settings from 'components/ui/Settings';\nimport GameOverScreen from 'components/ui/GameOverScreen';\nwindow.PIXI = PIXI;\n\nfunction App() {\n  \n  const width = 21 * 32;\n  const height = 32 * 13;\n\n  const [selectedProduct, setSelectedProduct] = useState<string>();\n\n  return (\n    <AppProvider>\n      <div className=\"App\">\n        <Settings />\n        <Scene \n          tilemap=\"scenes/level1.json\" \n          width={width} \n          height={height}\n          onProductClick={setSelectedProduct}\n        />\n        <IPad selectedProduct={selectedProduct}/>\n        <StartButton />\n        <StatusText />\n        <GameOverScreen />\n      </div>\n    </AppProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}